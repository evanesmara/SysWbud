ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 1


   1              		.code	16
   2              		.file	"queue.c"
   3              		.section	.debug_abbrev,"",%progbits
   4              	.Ldebug_abbrev0:
   5              		.section	.debug_info,"",%progbits
   6              	.Ldebug_info0:
   7              		.section	.debug_line,"",%progbits
   8              	.Ldebug_line0:
   9 0000 15010000 		.text
   9      02007300 
   9      00000201 
   9      FB0E0A00 
   9      01010101 
  10              	.Ltext0:
  11              		.align	2
  12              		.global	osCreateQueue
  13              		.code 16
  14              		.thumb_func
  15              		.type	osCreateQueue, %function
  16              	osCreateQueue:
  17              	.LFB2:
  18              		.file 1 "core/queue.c"
   1:core/queue.c  **** /******************************************************************************
   2:core/queue.c  ****  *
   3:core/queue.c  ****  * Copyright:
   4:core/queue.c  ****  *    (C) 2000 - 2005 Embedded Artists AB
   5:core/queue.c  ****  *
   6:core/queue.c  ****  * Description:
   7:core/queue.c  ****  *
   8:core/queue.c  ****  * ESIC:
   9:core/queue.c  ****  *    pre_emptive_os
  10:core/queue.c  ****  *
  11:core/queue.c  ****  * Version:
  12:core/queue.c  ****  *    1.4.0
  13:core/queue.c  ****  *
  14:core/queue.c  ****  * Generate date:
  15:core/queue.c  ****  *    2005-03-15 at 20:27:15
  16:core/queue.c  ****  *
  17:core/queue.c  ****  * NOTE:
  18:core/queue.c  ****  *    DO NOT EDIT THIS FILE. IT IS AUTO GENERATED.
  19:core/queue.c  ****  *    CHANGES TO THIS FILE WILL BE LOST IF THE FILE IS RE-GENERATED
  20:core/queue.c  ****  *
  21:core/queue.c  ****  * Signature:
  22:core/queue.c  ****  *   7072655F656D70746976655F6F73,312E342E302E30,020235
  23:core/queue.c  ****  *   ,35,10104021013134373435363030,07323838,3732,01013
  24:core/queue.c  ****  *   830,0101013138303030303030,3135,33,3135,0232323530
  25:core/queue.c  ****  *   ,01020130,0231343734353539,3238313831,020101100302
  26:core/queue.c  ****  *   103030310010133,0163130,3230,3330,3430,3530,3630,3
  27:core/queue.c  ****  *   730,3830,3930,313030,313130,313230,313330,313430,3
  28:core/queue.c  ****  *   13530,313630,,35,35,35,35,35,35,35,35,35,35,35,35,
  29:core/queue.c  ****  *   35,35,35,35,,,,1001001100011000000000]484152445741
  30:core/queue.c  ****  *   5245,4C5043323130365F32,545538,756E7369676E6564206
  31:core/queue.c  ****  *   3686172,414C49474E4D454E54,34,54424F4F4C,756E73696
  32:core/queue.c  ****  *   76E65642063686172,54553332,756E7369676E656420696E7
  33:core/queue.c  ****  *   4,544D505F46494C4553,2A2E656C663B2A2E6C73743B2A2E6
  34:core/queue.c  ****  *   D61703B2A2E6F3B2A2E6F626A3B2A2E64,454E4449414E,4C4
  35:core/queue.c  ****  *   954544C45,54533332,7369676E656420696E74,545338,736
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 2


  36:core/queue.c  ****  *   9676E65642063686172,54553136,756E7369676E656420736
  37:core/queue.c  ****  *   86F7274,54533136,7369676E65642073686F7274,44455343
  38:core/queue.c  ****  *   52495054494F4E,,44454255475F4C4556454C,30,434F4445
  39:core/queue.c  ****  *   5F524F4F54,,47454E5F52554C4553,,4C494E455F5445524D
  40:core/queue.c  ****  *   ,43524C46,4252414345,,43524541544F52,416E646572732
  41:core/queue.c  ****  *   0526F7376616C6C,4352454154494F4E5F44415445,3230303
  42:core/queue.c  ****  *   52D30332D31352032303A31373A3432,524F4F54,433A2F446
  43:core/queue.c  ****  *   F63756D656E747320616E642053657474696E67732F416E646
  44:core/queue.c  ****  *   5727320526F7376616C6C2F4D696E6120646F6B756D656E742
  45:core/queue.c  ****  *   F456D62656464656420417274697374732F50726F647563747
  46:core/queue.c  ****  *   32F4C50433231303620525332333220517569636B537461727
  47:core/queue.c  ****  *   420426F6172642F72746F732F]505245464958,,4445425547
  48:core/queue.c  ****  *   5F4C4556454C,30,555345525F434F4D4D454E54,]64656661
  49:core/queue.c  ****  *   756C74,
  50:core/queue.c  ****  *
  51:core/queue.c  ****  * Checksum:
  52:core/queue.c  ****  *    569771
  53:core/queue.c  ****  *
  54:core/queue.c  ****  *****************************************************************************/
  55:core/queue.c  **** 
  56:core/queue.c  **** 
  57:core/queue.c  **** /******************************************************************************
  58:core/queue.c  ****  * Includes
  59:core/queue.c  ****  *****************************************************************************/
  60:core/queue.c  **** 
  61:core/queue.c  **** #include "queue.h"
  62:core/queue.c  **** #include "hal.h"
  63:core/queue.c  **** #include "../api/general.h"
  64:core/queue.c  **** #include "event.h"
  65:core/queue.c  **** #include "kernel.h"
  66:core/queue.c  **** #include "pcb.h"
  67:core/queue.c  **** #include "error.h"
  68:core/queue.c  **** #include "../stub/osstub.h"
  69:core/queue.c  **** 
  70:core/queue.c  **** /******************************************************************************
  71:core/queue.c  ****  * Implementation of public functions
  72:core/queue.c  ****  *****************************************************************************/
  73:core/queue.c  **** 
  74:core/queue.c  **** 
  75:core/queue.c  **** /*****************************************************************************
  76:core/queue.c  ****  *
  77:core/queue.c  ****  * Description:
  78:core/queue.c  ****  *    This function initializes a queue structure. 
  79:core/queue.c  ****  *
  80:core/queue.c  ****  * Params:
  81:core/queue.c  ****  *    [in] pQueue     - A pointer to an allocated queue structure. 
  82:core/queue.c  ****  *    [in] pQueueArea - A pointer to the queue area. The user must allocate 
  83:core/queue.c  ****  *                      the memory area used by the queue. The queue area is 
  84:core/queue.c  ****  *                      an array of void pointers. 
  85:core/queue.c  ****  *    [in] size       - The size of the queue area. The size is given in 
  86:core/queue.c  ****  *                      number of void pointers in the area. 
  87:core/queue.c  ****  *
  88:core/queue.c  ****  ****************************************************************************/
  89:core/queue.c  **** void
  90:core/queue.c  **** osCreateQueue(tQueue* pQueue,
  91:core/queue.c  ****               void**  pQueueArea,
  92:core/queue.c  ****               tU16    size)
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 3


  93:core/queue.c  **** {
  19              		.loc 1 93 0
  20 0000 70B5     		push	{r4, r5, r6, lr}
  21              	.LCFI0:
  22              		.loc 1 93 0
  23 0002 041C     		mov	r4, r0
  24 0004 0D1C     		mov	r5, r1
  25 0006 1604     		lsl	r6, r2, #16
  94:core/queue.c  ****   eventInit((tOSEvent*)pQueue);
  26              		.loc 1 94 0
  27 0008 FFF7FEFF 		bl	eventInit
  28              		.loc 1 93 0
  29 000c 360C     		lsr	r6, r6, #16
  95:core/queue.c  **** 
  96:core/queue.c  ****   pQueue->pQStart = pQueueArea;
  97:core/queue.c  ****   pQueue->pQEnd  = pQueueArea+size;
  30              		.loc 1 97 0
  31 000e B300     		lsl	r3, r6, #2
  32 0010 EB18     		add	r3, r5, r3
  33 0012 E361     		str	r3, [r4, #28]
  98:core/queue.c  ****   pQueue->pQIn = pQueueArea;
  99:core/queue.c  ****   pQueue->pQOut = pQueueArea;
 100:core/queue.c  ****   pQueue->queueSize = size;
 101:core/queue.c  ****   pQueue->nEntries = 0;
  34              		.loc 1 101 0
  35 0014 0023     		mov	r3, #0
  36              		.loc 1 96 0
  37 0016 A561     		str	r5, [r4, #24]
  38              		.loc 1 98 0
  39 0018 2562     		str	r5, [r4, #32]
  40              		.loc 1 99 0
  41 001a 6562     		str	r5, [r4, #36]
  42              		.loc 1 100 0
  43 001c 2685     		strh	r6, [r4, #40]
  44              		.loc 1 101 0
  45 001e 6385     		strh	r3, [r4, #42]
  46              		@ sp needed for prologue
  47 0020 70BC     		pop	{r4, r5, r6}
  48 0022 01BC     		pop	{r0}
  49 0024 0047     		bx	r0
  50              	.LFE2:
  51              		.size	osCreateQueue, .-osCreateQueue
  52 0026 0000     		.align	2
  53              		.global	osPendQueue
  54              		.code 16
  55              		.thumb_func
  56              		.type	osPendQueue, %function
  57              	osPendQueue:
  58              	.LFB3:
 102:core/queue.c  **** }
 103:core/queue.c  **** 
 104:core/queue.c  **** 
 105:core/queue.c  **** /*****************************************************************************
 106:core/queue.c  ****  *
 107:core/queue.c  ****  * Description:
 108:core/queue.c  ****  *    This function retrieves the first message from the queue. The message is 
 109:core/queue.c  ****  *    removed from the queue. If the queue is empty the function will block 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 4


 110:core/queue.c  ****  *    until there is a message to retrieve or a timeout occurs. 
 111:core/queue.c  ****  *
 112:core/queue.c  ****  * Params:
 113:core/queue.c  ****  *    [in]  pQueue  - A pointer to an initialized queue structure. 
 114:core/queue.c  ****  *    [in]  timeout - The number of ticks to wait on a queue before returning. 
 115:core/queue.c  ****  *                    If a timeout of zero is specified the function will 
 116:core/queue.c  ****  *                    never timeout. 
 117:core/queue.c  ****  *    [out] pError  - The return status of the function. 
 118:core/queue.c  ****  *
 119:core/queue.c  ****  * Returns:
 120:core/queue.c  ****  *    The first message in the queue or NULL if timeout or error. 
 121:core/queue.c  ****  *
 122:core/queue.c  ****  * Error codes:
 123:core/queue.c  ****  *    OS_OK         - The function completed successfully. 
 124:core/queue.c  ****  *    OS_ERROR_ISR  - The function was called from an interrupt service 
 125:core/queue.c  ****  *                    routine. 
 126:core/queue.c  ****  *    OS_ERROR_NULL - A NULL pointer was supplied to the function where it was 
 127:core/queue.c  ****  *                    not allowed. 
 128:core/queue.c  ****  *
 129:core/queue.c  ****  ****************************************************************************/
 130:core/queue.c  **** void*
 131:core/queue.c  **** osPendQueue(tQueue* pQueue,
 132:core/queue.c  ****             tU16    timeout,
 133:core/queue.c  ****             tU8*    pError)
 134:core/queue.c  **** {
  59              		.loc 1 134 0
  60 0028 F0B5     		push	{r4, r5, r6, r7, lr}
  61              	.LCFI1:
  62 002a 82B0     		sub	sp, sp, #8
  63              	.LCFI2:
  64              		.loc 1 134 0
  65 002c 0904     		lsl	r1, r1, #16
 135:core/queue.c  ****   volatile tSR localSR;  /* declare temporary local space for status word */
 136:core/queue.c  ****   tBool haveMsg = FALSE;
  66              		.loc 1 136 0
  67 002e 0023     		mov	r3, #0
 137:core/queue.c  ****   void * msg = NULL;
  68              		.loc 1 137 0
  69 0030 0026     		mov	r6, #0
  70              		.loc 1 136 0
  71 0032 0093     		str	r3, [sp]
  72              		.loc 1 134 0
  73 0034 151C     		mov	r5, r2
  74 0036 0F0C     		lsr	r7, r1, #16
 138:core/queue.c  ****   tU8 ret;
 139:core/queue.c  ****   *pError = OS_OK;
  75              		.loc 1 139 0
  76 0038 1670     		strb	r6, [r2]
 140:core/queue.c  ****   if(pQueue == NULL)
  77              		.loc 1 140 0
  78 003a 041E     		sub	r4, r0, #0
  79 003c 01D1     		bne	.L3
 141:core/queue.c  ****   {
 142:core/queue.c  ****     *pError = OS_ERROR_NULL;
  80              		.loc 1 142 0
  81 003e 0123     		mov	r3, #1
  82 0040 0CE0     		b	.L13
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 5


  83              	.L3:
 143:core/queue.c  **** 
 144:core/queue.c  ****     return NULL;
 145:core/queue.c  ****   }
 146:core/queue.c  **** 
 147:core/queue.c  ****   m_os_dis_int();
  84              		.loc 1 147 0
  85 0042 FFF7FEFF 		bl	halDisableInterrupts_oshal
  86 0046 0190     		str	r0, [sp, #4]
  87 0048 C046     		 nop
 148:core/queue.c  ****   if(isrNesting > 0)
  88              		.loc 1 148 0
  89              		.code	16
  90 004a 254B     		ldr	r3, .L14
  91 004c 1B78     		ldrb	r3, [r3]
  92 004e 002B     		cmp	r3, #0
  93 0050 06D0     		beq	.L4
 149:core/queue.c  ****   {
 150:core/queue.c  ****     m_os_ena_int();
  94              		.loc 1 150 0
  95 0052 0198     		ldr	r0, [sp, #4]
  96 0054 FFF7FEFF 		bl	halRestoreInterrupts_oshal
  97 0058 C046     		 nop
 151:core/queue.c  ****     *pError = OS_ERROR_ISR;
  98              		.loc 1 151 0
  99              		.code	16
 100 005a 0223     		mov	r3, #2
 101              	.L13:
 102 005c 2B70     		strb	r3, [r5]
 103 005e 23E0     		b	.L12
 104              	.L4:
 152:core/queue.c  **** 
 153:core/queue.c  ****     return NULL;
 154:core/queue.c  ****   }
 155:core/queue.c  ****   m_os_ena_int();
 105              		.loc 1 155 0
 106 0060 0198     		ldr	r0, [sp, #4]
 107 0062 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 108 0066 C046     		 nop
 109              		.code	16
 110              	.L5:
 156:core/queue.c  **** 
 157:core/queue.c  ****   /* we need to loop since when eventWait return
 158:core/queue.c  ****      another process may preempt us and modify
 159:core/queue.c  ****      the queue (eventWait may result in interrupts enabled)*/
 160:core/queue.c  ****   do{
 161:core/queue.c  ****     m_os_dis_int();
 111              		.loc 1 161 0
 112 0068 FFF7FEFF 		bl	halDisableInterrupts_oshal
 113 006c 0190     		str	r0, [sp, #4]
 114 006e C046     		 nop
 162:core/queue.c  ****     if(pQueue->nEntries == 0)
 115              		.loc 1 162 0
 116              		.code	16
 117 0070 618D     		ldrh	r1, [r4, #42]
 118 0072 0029     		cmp	r1, #0
 119 0074 1AD1     		bne	.L8
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 6


 163:core/queue.c  ****     {
 164:core/queue.c  ****       eventWait((tOSEvent*)pQueue, timeout);
 120              		.loc 1 164 0
 121 0076 201C     		mov	r0, r4
 122 0078 391C     		mov	r1, r7
 123 007a FFF7FEFF 		bl	eventWait
 165:core/queue.c  ****       m_os_ena_int();
 124              		.loc 1 165 0
 125 007e 0198     		ldr	r0, [sp, #4]
 126 0080 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 127 0084 C046     		 nop
 166:core/queue.c  ****       schedule();
 128              		.loc 1 166 0
 129              		.code	16
 130 0086 FFF7FEFF 		bl	schedule
 167:core/queue.c  ****       m_os_dis_int();
 131              		.loc 1 167 0
 132 008a FFF7FEFF 		bl	halDisableInterrupts_oshal
 133 008e 0190     		str	r0, [sp, #4]
 134 0090 C046     		 nop
 168:core/queue.c  ****       ret = eventWaitReturn((tOSEvent*)pQueue);
 135              		.loc 1 168 0
 136              		.code	16
 137 0092 201C     		mov	r0, r4
 138 0094 FFF7FEFF 		bl	eventWaitReturn
 139 0098 0006     		lsl	r0, r0, #24
 140 009a 000E     		lsr	r0, r0, #24
 169:core/queue.c  ****       if(ret == OS_ERROR_TIMEOUT)
 141              		.loc 1 169 0
 142 009c 0828     		cmp	r0, #8
 143 009e 12D1     		bne	.L10
 170:core/queue.c  ****       {
 171:core/queue.c  ****         m_os_ena_int();
 144              		.loc 1 171 0
 145 00a0 0198     		ldr	r0, [sp, #4]
 146 00a2 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 147 00a6 C046     		 nop
 148              		.code	16
 149              	.L12:
 172:core/queue.c  ****         return NULL;
 150              		.loc 1 172 0
 151 00a8 0020     		mov	r0, #0
 152 00aa 14E0     		b	.L2
 153              	.L8:
 173:core/queue.c  ****       }
 174:core/queue.c  ****     }
 175:core/queue.c  ****     else
 176:core/queue.c  ****     {
 177:core/queue.c  ****       msg = *pQueue->pQOut++;
 154              		.loc 1 177 0
 155 00ac 626A     		ldr	r2, [r4, #36]
 156 00ae 08CA     		ldmia	r2!, {r3}
 157 00b0 1E1C     		mov	r6, r3
 178:core/queue.c  ****       pQueue->nEntries--;
 158              		.loc 1 178 0
 159 00b2 4B1E     		sub	r3, r1, #1
 160 00b4 6385     		strh	r3, [r4, #42]
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 7


 179:core/queue.c  ****       if(pQueue->pQOut == pQueue->pQEnd)
 161              		.loc 1 179 0
 162 00b6 E369     		ldr	r3, [r4, #28]
 163              		.loc 1 177 0
 164 00b8 6262     		str	r2, [r4, #36]
 165              		.loc 1 179 0
 166 00ba 9A42     		cmp	r2, r3
 167 00bc 01D1     		bne	.L11
 180:core/queue.c  ****       {
 181:core/queue.c  ****         pQueue->pQOut = pQueue->pQStart;
 168              		.loc 1 181 0
 169 00be A369     		ldr	r3, [r4, #24]
 170 00c0 6362     		str	r3, [r4, #36]
 171              	.L11:
 182:core/queue.c  ****       }
 183:core/queue.c  ****       haveMsg = TRUE;
 172              		.loc 1 183 0
 173 00c2 0123     		mov	r3, #1
 174 00c4 0093     		str	r3, [sp]
 175              	.L10:
 184:core/queue.c  ****     }
 185:core/queue.c  ****     m_os_ena_int();
 176              		.loc 1 185 0
 177 00c6 0198     		ldr	r0, [sp, #4]
 178 00c8 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 179 00cc C046     		 nop
 186:core/queue.c  ****   }while(haveMsg == FALSE);
 180              		.loc 1 186 0
 181              		.code	16
 182 00ce 009B     		ldr	r3, [sp]
 183 00d0 002B     		cmp	r3, #0
 184 00d2 C9D0     		beq	.L5
 187:core/queue.c  **** 
 188:core/queue.c  ****   return msg;
 185              		.loc 1 188 0
 186 00d4 301C     		mov	r0, r6
 187              	.L2:
 189:core/queue.c  **** }
 188              		.loc 1 189 0
 189 00d6 02B0     		add	sp, sp, #8
 190              		@ sp needed for prologue
 191 00d8 F0BC     		pop	{r4, r5, r6, r7}
 192 00da 02BC     		pop	{r1}
 193 00dc 0847     		bx	r1
 194              	.L15:
 195 00de 0000     		.align	2
 196              	.L14:
 197 00e0 00000000 		.word	isrNesting
 198              	.LFE3:
 199              		.size	osPendQueue, .-osPendQueue
 200              		.align	2
 201              		.global	osAcceptQueue
 202              		.code 16
 203              		.thumb_func
 204              		.type	osAcceptQueue, %function
 205              	osAcceptQueue:
 206              	.LFB4:
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 8


 190:core/queue.c  **** 
 191:core/queue.c  **** 
 192:core/queue.c  **** /*****************************************************************************
 193:core/queue.c  ****  *
 194:core/queue.c  ****  * Description:
 195:core/queue.c  ****  *    This function tries to receive the first message from the queue. If the 
 196:core/queue.c  ****  *    queue is empty the function returns immediately. This function can be 
 197:core/queue.c  ****  *    called from within an interrupt service routine (ISR). 
 198:core/queue.c  ****  *
 199:core/queue.c  ****  * Params:
 200:core/queue.c  ****  *    [in]  pQueue - A pointer to an initialized queue structure. 
 201:core/queue.c  ****  *    [out] pError - The return status of the function. 
 202:core/queue.c  ****  *
 203:core/queue.c  ****  * Returns:
 204:core/queue.c  ****  *    The retrieved message or NULL if the queue is empty. 
 205:core/queue.c  ****  *
 206:core/queue.c  ****  * Error codes:
 207:core/queue.c  ****  *    OS_OK         - The function completed successfully. 
 208:core/queue.c  ****  *    OS_ERROR_NULL - A NULL pointer was supplied to the function where it was 
 209:core/queue.c  ****  *                    not allowed. 
 210:core/queue.c  ****  *
 211:core/queue.c  ****  ****************************************************************************/
 212:core/queue.c  **** void*
 213:core/queue.c  **** osAcceptQueue(tQueue* pQueue,
 214:core/queue.c  ****               tU8*    pError)
 215:core/queue.c  **** {
 207              		.loc 1 215 0
 208 00e4 30B5     		push	{r4, r5, lr}
 209              	.LCFI3:
 216:core/queue.c  ****   volatile tSR localSR;  /* declare temporary local space for status word */
 217:core/queue.c  ****   void *pMsg = NULL;
 210              		.loc 1 217 0
 211 00e6 0025     		mov	r5, #0
 212              		.loc 1 215 0
 213 00e8 81B0     		sub	sp, sp, #4
 214              	.LCFI4:
 218:core/queue.c  ****   *pError = OS_OK;
 215              		.loc 1 218 0
 216 00ea 0D70     		strb	r5, [r1]
 219:core/queue.c  ****   if(pQueue == NULL)
 217              		.loc 1 219 0
 218 00ec 041E     		sub	r4, r0, #0
 219 00ee 03D1     		bne	.L17
 220:core/queue.c  ****   {
 221:core/queue.c  ****     *pError = OS_ERROR_NULL;
 220              		.loc 1 221 0
 221 00f0 0123     		mov	r3, #1
 222:core/queue.c  **** 
 223:core/queue.c  ****     return NULL;
 222              		.loc 1 223 0
 223 00f2 0020     		mov	r0, #0
 224              		.loc 1 221 0
 225 00f4 0B70     		strb	r3, [r1]
 226              		.loc 1 223 0
 227 00f6 16E0     		b	.L16
 228              	.L17:
 224:core/queue.c  ****   }
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 9


 225:core/queue.c  **** 
 226:core/queue.c  ****   m_os_dis_int();
 229              		.loc 1 226 0
 230 00f8 FFF7FEFF 		bl	halDisableInterrupts_oshal
 231 00fc 0090     		str	r0, [sp]
 232 00fe C046     		 nop
 227:core/queue.c  ****   if(pQueue->nEntries > 0)
 233              		.loc 1 227 0
 234              		.code	16
 235 0100 618D     		ldrh	r1, [r4, #42]
 236 0102 0029     		cmp	r1, #0
 237 0104 0AD0     		beq	.L18
 228:core/queue.c  ****   {
 229:core/queue.c  ****     pMsg = *pQueue->pQOut++;
 238              		.loc 1 229 0
 239 0106 626A     		ldr	r2, [r4, #36]
 240 0108 08CA     		ldmia	r2!, {r3}
 241 010a 1D1C     		mov	r5, r3
 230:core/queue.c  ****     pQueue->nEntries--;
 242              		.loc 1 230 0
 243 010c 4B1E     		sub	r3, r1, #1
 244 010e 6385     		strh	r3, [r4, #42]
 231:core/queue.c  ****     if(pQueue->pQOut == pQueue->pQEnd)
 245              		.loc 1 231 0
 246 0110 E369     		ldr	r3, [r4, #28]
 247              		.loc 1 229 0
 248 0112 6262     		str	r2, [r4, #36]
 249              		.loc 1 231 0
 250 0114 9A42     		cmp	r2, r3
 251 0116 01D1     		bne	.L18
 232:core/queue.c  ****     {
 233:core/queue.c  ****       pQueue->pQOut = pQueue->pQStart;
 252              		.loc 1 233 0
 253 0118 A369     		ldr	r3, [r4, #24]
 254 011a 6362     		str	r3, [r4, #36]
 255              	.L18:
 234:core/queue.c  ****     }
 235:core/queue.c  ****   }
 236:core/queue.c  ****   m_os_ena_int();
 256              		.loc 1 236 0
 257 011c 0098     		ldr	r0, [sp]
 258 011e FFF7FEFF 		bl	halRestoreInterrupts_oshal
 259 0122 C046     		 nop
 237:core/queue.c  ****   return pMsg;
 260              		.loc 1 237 0
 261              		.code	16
 262 0124 281C     		mov	r0, r5
 263              	.L16:
 238:core/queue.c  **** }
 264              		.loc 1 238 0
 265 0126 01B0     		add	sp, sp, #4
 266              		@ sp needed for prologue
 267 0128 30BC     		pop	{r4, r5}
 268 012a 02BC     		pop	{r1}
 269 012c 0847     		bx	r1
 270              	.LFE4:
 271              		.size	osAcceptQueue, .-osAcceptQueue
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 10


 272 012e 0000     		.align	2
 273              		.global	osFlushQueue
 274              		.code 16
 275              		.thumb_func
 276              		.type	osFlushQueue, %function
 277              	osFlushQueue:
 278              	.LFB5:
 239:core/queue.c  **** 
 240:core/queue.c  **** 
 241:core/queue.c  **** /*****************************************************************************
 242:core/queue.c  ****  *
 243:core/queue.c  ****  * Description:
 244:core/queue.c  ****  *    This function clears a queue from all messages. 
 245:core/queue.c  ****  *
 246:core/queue.c  ****  * Params:
 247:core/queue.c  ****  *    [in]  pQueue - A pointer to an initialized queue. 
 248:core/queue.c  ****  *    [out] pError - The return status of the function. 
 249:core/queue.c  ****  *
 250:core/queue.c  ****  * Error codes:
 251:core/queue.c  ****  *    OS_OK         - The function completed successfully. 
 252:core/queue.c  ****  *    OS_ERROR_NULL - A NULL pointer was supplied to the function where it was 
 253:core/queue.c  ****  *                    not allowed. 
 254:core/queue.c  ****  *
 255:core/queue.c  ****  ****************************************************************************/
 256:core/queue.c  **** void
 257:core/queue.c  **** osFlushQueue(tQueue* pQueue,
 258:core/queue.c  ****              tU8*    pError)
 259:core/queue.c  **** {
 279              		.loc 1 259 0
 280 0130 10B5     		push	{r4, lr}
 281              	.LCFI5:
 260:core/queue.c  ****   volatile tSR localSR;  /* declare temporary local space for status word */
 261:core/queue.c  ****   *pError = OS_OK;
 282              		.loc 1 261 0
 283 0132 0023     		mov	r3, #0
 284              		.loc 1 259 0
 285 0134 81B0     		sub	sp, sp, #4
 286              	.LCFI6:
 287              		.loc 1 261 0
 288 0136 0B70     		strb	r3, [r1]
 262:core/queue.c  ****   if(pQueue == NULL)
 289              		.loc 1 262 0
 290 0138 041E     		sub	r4, r0, #0
 291 013a 02D1     		bne	.L21
 263:core/queue.c  ****   {
 264:core/queue.c  ****     *pError = OS_ERROR_NULL;
 292              		.loc 1 264 0
 293 013c 0123     		mov	r3, #1
 294 013e 0B70     		strb	r3, [r1]
 265:core/queue.c  **** 
 266:core/queue.c  ****     return;
 295              		.loc 1 266 0
 296 0140 0CE0     		b	.L20
 297              	.L21:
 267:core/queue.c  ****   }
 268:core/queue.c  **** 
 269:core/queue.c  ****   m_os_dis_int();
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 11


 298              		.loc 1 269 0
 299 0142 FFF7FEFF 		bl	halDisableInterrupts_oshal
 300 0146 0090     		str	r0, [sp]
 301 0148 C046     		 nop
 270:core/queue.c  ****   pQueue->pQIn = pQueue->pQStart;
 302              		.loc 1 270 0
 303              		.code	16
 304 014a A369     		ldr	r3, [r4, #24]
 305 014c 2362     		str	r3, [r4, #32]
 271:core/queue.c  ****   pQueue->pQOut = pQueue->pQStart;
 306              		.loc 1 271 0
 307 014e 6362     		str	r3, [r4, #36]
 272:core/queue.c  ****   pQueue->nEntries = 0;
 308              		.loc 1 272 0
 309 0150 0023     		mov	r3, #0
 310 0152 6385     		strh	r3, [r4, #42]
 273:core/queue.c  ****   m_os_ena_int();
 311              		.loc 1 273 0
 312 0154 0098     		ldr	r0, [sp]
 313 0156 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 314 015a C046     		 nop
 315              		.code	16
 316              	.L20:
 274:core/queue.c  **** }
 317              		.loc 1 274 0
 318 015c 01B0     		add	sp, sp, #4
 319              		@ sp needed for prologue
 320 015e 10BC     		pop	{r4}
 321 0160 01BC     		pop	{r0}
 322 0162 0047     		bx	r0
 323              	.LFE5:
 324              		.size	osFlushQueue, .-osFlushQueue
 325              		.align	2
 326              		.global	osPostQueue
 327              		.code 16
 328              		.thumb_func
 329              		.type	osPostQueue, %function
 330              	osPostQueue:
 331              	.LFB6:
 275:core/queue.c  **** 
 276:core/queue.c  **** 
 277:core/queue.c  **** /*****************************************************************************
 278:core/queue.c  ****  *
 279:core/queue.c  ****  * Description:
 280:core/queue.c  ****  *    This function posts a new message to the end of the queue. 
 281:core/queue.c  ****  *
 282:core/queue.c  ****  * Params:
 283:core/queue.c  ****  *    [in]  pQueue - A pointer to an initialized queue structure. 
 284:core/queue.c  ****  *    [in]  msg    - The message to post. 
 285:core/queue.c  ****  *    [out] pError - The return status of the function. 
 286:core/queue.c  ****  *
 287:core/queue.c  ****  * Error codes:
 288:core/queue.c  ****  *    OS_ERROR_QUEUE_FULL - The queue is full. 
 289:core/queue.c  ****  *    OS_OK               - The function completed successfully. 
 290:core/queue.c  ****  *    OS_ERROR_NULL       - A NULL pointer was supplied to the function where 
 291:core/queue.c  ****  *                          it was not allowed. 
 292:core/queue.c  ****  *
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 12


 293:core/queue.c  ****  ****************************************************************************/
 294:core/queue.c  **** void
 295:core/queue.c  **** osPostQueue(tQueue* pQueue,
 296:core/queue.c  ****             void*   msg,
 297:core/queue.c  ****             tU8*    pError)
 298:core/queue.c  **** {
 332              		.loc 1 298 0
 333 0164 70B5     		push	{r4, r5, r6, lr}
 334              	.LCFI7:
 299:core/queue.c  ****   volatile tSR localSR;  /* declare temporary local space for status word */
 300:core/queue.c  ****   *pError = OS_OK;
 335              		.loc 1 300 0
 336 0166 0023     		mov	r3, #0
 337              		.loc 1 298 0
 338 0168 81B0     		sub	sp, sp, #4
 339              	.LCFI8:
 340              		.loc 1 298 0
 341 016a 0E1C     		mov	r6, r1
 342 016c 151C     		mov	r5, r2
 343              		.loc 1 300 0
 344 016e 1370     		strb	r3, [r2]
 301:core/queue.c  ****   if(pQueue == NULL)
 345              		.loc 1 301 0
 346 0170 041E     		sub	r4, r0, #0
 347 0172 01D1     		bne	.L23
 302:core/queue.c  ****   {
 303:core/queue.c  ****     *pError = OS_ERROR_NULL;
 348              		.loc 1 303 0
 349 0174 0123     		mov	r3, #1
 350 0176 0CE0     		b	.L28
 351              	.L23:
 304:core/queue.c  **** 
 305:core/queue.c  ****     return;
 306:core/queue.c  ****   }
 307:core/queue.c  **** 
 308:core/queue.c  ****   m_os_dis_int();
 352              		.loc 1 308 0
 353 0178 FFF7FEFF 		bl	halDisableInterrupts_oshal
 354 017c 0090     		str	r0, [sp]
 355 017e C046     		 nop
 309:core/queue.c  ****   
 310:core/queue.c  ****   if(pQueue->nEntries == pQueue->queueSize)
 356              		.loc 1 310 0
 357              		.code	16
 358 0180 628D     		ldrh	r2, [r4, #42]
 359 0182 238D     		ldrh	r3, [r4, #40]
 360 0184 9A42     		cmp	r2, r3
 361 0186 06D1     		bne	.L24
 311:core/queue.c  ****   {
 312:core/queue.c  ****     m_os_ena_int();
 362              		.loc 1 312 0
 363 0188 0098     		ldr	r0, [sp]
 364 018a FFF7FEFF 		bl	halRestoreInterrupts_oshal
 365 018e C046     		 nop
 313:core/queue.c  ****     *pError = OS_ERROR_QUEUE_FULL;
 366              		.loc 1 313 0
 367              		.code	16
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 13


 368 0190 0723     		mov	r3, #7
 369              	.L28:
 370 0192 2B70     		strb	r3, [r5]
 314:core/queue.c  **** 
 315:core/queue.c  ****     return;
 371              		.loc 1 315 0
 372 0194 25E0     		b	.L22
 373              	.L24:
 316:core/queue.c  ****   }
 317:core/queue.c  **** 
 318:core/queue.c  ****   *(pQueue->pQIn) = msg;
 374              		.loc 1 318 0
 375 0196 236A     		ldr	r3, [r4, #32]
 376 0198 40C3     		stmia	r3!, {r6}
 319:core/queue.c  ****   pQueue->pQIn++;
 320:core/queue.c  ****   pQueue->nEntries++;
 377              		.loc 1 320 0
 378 019a 628D     		ldrh	r2, [r4, #42]
 379 019c 0132     		add	r2, r2, #1
 380 019e 6285     		strh	r2, [r4, #42]
 321:core/queue.c  ****   if(pQueue->pQIn == pQueue->pQEnd)
 381              		.loc 1 321 0
 382 01a0 E269     		ldr	r2, [r4, #28]
 383              		.loc 1 319 0
 384 01a2 2362     		str	r3, [r4, #32]
 385              		.loc 1 321 0
 386 01a4 9342     		cmp	r3, r2
 387 01a6 01D1     		bne	.L25
 322:core/queue.c  ****   {
 323:core/queue.c  ****     pQueue->pQIn = pQueue->pQStart;
 388              		.loc 1 323 0
 389 01a8 A369     		ldr	r3, [r4, #24]
 390 01aa 2362     		str	r3, [r4, #32]
 391              	.L25:
 324:core/queue.c  ****   }
 325:core/queue.c  ****   if(eventIsEmpty((tOSEvent*)pQueue) == FALSE)
 392              		.loc 1 325 0
 393 01ac 201C     		mov	r0, r4
 394 01ae FFF7FEFF 		bl	eventIsEmpty
 395 01b2 0006     		lsl	r0, r0, #24
 396 01b4 0028     		cmp	r0, #0
 397 01b6 10D1     		bne	.L26
 326:core/queue.c  ****   {
 327:core/queue.c  ****     eventSignal((tOSEvent*)pQueue);
 398              		.loc 1 327 0
 399 01b8 201C     		mov	r0, r4
 400 01ba FFF7FEFF 		bl	eventSignal
 328:core/queue.c  ****     if(isrNesting == 0)
 401              		.loc 1 328 0
 402 01be 0B4B     		ldr	r3, .L29
 403 01c0 1B78     		ldrb	r3, [r3]
 404 01c2 002B     		cmp	r3, #0
 405 01c4 09D1     		bne	.L26
 329:core/queue.c  ****     {
 330:core/queue.c  ****       m_os_ena_int();
 406              		.loc 1 330 0
 407 01c6 0098     		ldr	r0, [sp]
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 14


 408 01c8 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 409 01cc C046     		 nop
 331:core/queue.c  ****       schedule();
 410              		.loc 1 331 0
 411              		.code	16
 412 01ce FFF7FEFF 		bl	schedule
 332:core/queue.c  ****       m_os_dis_int();
 413              		.loc 1 332 0
 414 01d2 FFF7FEFF 		bl	halDisableInterrupts_oshal
 415 01d6 0090     		str	r0, [sp]
 416 01d8 C046     		 nop
 417              		.code	16
 418              	.L26:
 333:core/queue.c  ****     }
 334:core/queue.c  ****   }
 335:core/queue.c  ****   m_os_ena_int();
 419              		.loc 1 335 0
 420 01da 0098     		ldr	r0, [sp]
 421 01dc FFF7FEFF 		bl	halRestoreInterrupts_oshal
 422 01e0 C046     		 nop
 423              		.code	16
 424              	.L22:
 336:core/queue.c  **** }
 425              		.loc 1 336 0
 426 01e2 01B0     		add	sp, sp, #4
 427              		@ sp needed for prologue
 428 01e4 70BC     		pop	{r4, r5, r6}
 429 01e6 01BC     		pop	{r0}
 430 01e8 0047     		bx	r0
 431              	.L30:
 432 01ea 0000     		.align	2
 433              	.L29:
 434 01ec 00000000 		.word	isrNesting
 435              	.LFE6:
 436              		.size	osPostQueue, .-osPostQueue
 437              		.align	2
 438              		.global	osPostFrontQueue
 439              		.code 16
 440              		.thumb_func
 441              		.type	osPostFrontQueue, %function
 442              	osPostFrontQueue:
 443              	.LFB7:
 337:core/queue.c  **** 
 338:core/queue.c  **** 
 339:core/queue.c  **** /*****************************************************************************
 340:core/queue.c  ****  *
 341:core/queue.c  ****  * Description:
 342:core/queue.c  ****  *    This function posts a new message to the front of the queue. 
 343:core/queue.c  ****  *
 344:core/queue.c  ****  * Params:
 345:core/queue.c  ****  *    [in]  pQueue - 
 346:core/queue.c  ****  *    [in]  msg    - The message to post. 
 347:core/queue.c  ****  *    [out] pError - The return status of the function. 
 348:core/queue.c  ****  *
 349:core/queue.c  ****  * Error codes:
 350:core/queue.c  ****  *    OS_ERROR_QUEUE_FULL - The queue is full. 
 351:core/queue.c  ****  *    OS_OK               - The function completed successfully. 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 15


 352:core/queue.c  ****  *    OS_ERROR_NULL       - A NULL pointer was supplied to the function where 
 353:core/queue.c  ****  *                          it was not allowed. 
 354:core/queue.c  ****  *
 355:core/queue.c  ****  ****************************************************************************/
 356:core/queue.c  **** void
 357:core/queue.c  **** osPostFrontQueue(tQueue* pQueue,
 358:core/queue.c  ****                  void*   msg,
 359:core/queue.c  ****                  tU8*    pError)
 360:core/queue.c  **** {
 444              		.loc 1 360 0
 445 01f0 70B5     		push	{r4, r5, r6, lr}
 446              	.LCFI9:
 361:core/queue.c  ****   volatile tSR localSR;  /* declare temporary local space for status word */
 362:core/queue.c  ****   *pError = OS_OK;
 447              		.loc 1 362 0
 448 01f2 0023     		mov	r3, #0
 449              		.loc 1 360 0
 450 01f4 81B0     		sub	sp, sp, #4
 451              	.LCFI10:
 452              		.loc 1 360 0
 453 01f6 0E1C     		mov	r6, r1
 454 01f8 151C     		mov	r5, r2
 455              		.loc 1 362 0
 456 01fa 1370     		strb	r3, [r2]
 363:core/queue.c  ****   if(pQueue == NULL)
 457              		.loc 1 363 0
 458 01fc 041E     		sub	r4, r0, #0
 459 01fe 01D1     		bne	.L32
 364:core/queue.c  ****   {
 365:core/queue.c  ****     *pError = OS_ERROR_NULL;
 460              		.loc 1 365 0
 461 0200 0123     		mov	r3, #1
 462 0202 0CE0     		b	.L37
 463              	.L32:
 366:core/queue.c  **** 
 367:core/queue.c  ****     return;
 368:core/queue.c  ****   }
 369:core/queue.c  **** 
 370:core/queue.c  ****   m_os_dis_int();
 464              		.loc 1 370 0
 465 0204 FFF7FEFF 		bl	halDisableInterrupts_oshal
 466 0208 0090     		str	r0, [sp]
 467 020a C046     		 nop
 371:core/queue.c  ****   
 372:core/queue.c  ****   if(pQueue->nEntries == pQueue->queueSize)
 468              		.loc 1 372 0
 469              		.code	16
 470 020c 628D     		ldrh	r2, [r4, #42]
 471 020e 238D     		ldrh	r3, [r4, #40]
 472 0210 9A42     		cmp	r2, r3
 473 0212 06D1     		bne	.L33
 373:core/queue.c  ****   {
 374:core/queue.c  ****     m_os_ena_int();
 474              		.loc 1 374 0
 475 0214 0098     		ldr	r0, [sp]
 476 0216 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 477 021a C046     		 nop
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 16


 375:core/queue.c  ****     *pError = OS_ERROR_QUEUE_FULL;
 478              		.loc 1 375 0
 479              		.code	16
 480 021c 0723     		mov	r3, #7
 481              	.L37:
 482 021e 2B70     		strb	r3, [r5]
 376:core/queue.c  **** 
 377:core/queue.c  ****     return;
 483              		.loc 1 377 0
 484 0220 27E0     		b	.L31
 485              	.L33:
 378:core/queue.c  ****   }
 379:core/queue.c  **** 
 380:core/queue.c  ****   if(pQueue->pQOut == pQueue->pQStart)
 486              		.loc 1 380 0
 487 0222 626A     		ldr	r2, [r4, #36]
 488 0224 A369     		ldr	r3, [r4, #24]
 489 0226 9A42     		cmp	r2, r3
 490 0228 01D1     		bne	.L34
 381:core/queue.c  ****   {
 382:core/queue.c  ****     pQueue->pQOut = pQueue->pQEnd;
 491              		.loc 1 382 0
 492 022a E369     		ldr	r3, [r4, #28]
 493 022c 6362     		str	r3, [r4, #36]
 494              	.L34:
 383:core/queue.c  ****   }
 384:core/queue.c  ****   pQueue->pQOut--;
 495              		.loc 1 384 0
 496 022e 636A     		ldr	r3, [r4, #36]
 497 0230 043B     		sub	r3, r3, #4
 385:core/queue.c  ****   *(pQueue->pQOut) = msg;  
 498              		.loc 1 385 0
 499 0232 1E60     		str	r6, [r3]
 500              		.loc 1 384 0
 501 0234 6362     		str	r3, [r4, #36]
 386:core/queue.c  ****   pQueue->nEntries++;
 502              		.loc 1 386 0
 503 0236 638D     		ldrh	r3, [r4, #42]
 504 0238 0133     		add	r3, r3, #1
 505 023a 6385     		strh	r3, [r4, #42]
 387:core/queue.c  **** 
 388:core/queue.c  ****   if(eventIsEmpty((tOSEvent*)pQueue) == FALSE)
 506              		.loc 1 388 0
 507 023c 201C     		mov	r0, r4
 508 023e FFF7FEFF 		bl	eventIsEmpty
 509 0242 0006     		lsl	r0, r0, #24
 510 0244 0028     		cmp	r0, #0
 511 0246 10D1     		bne	.L35
 389:core/queue.c  ****   {
 390:core/queue.c  ****     eventSignal((tOSEvent*)pQueue);
 512              		.loc 1 390 0
 513 0248 201C     		mov	r0, r4
 514 024a FFF7FEFF 		bl	eventSignal
 391:core/queue.c  ****     if(isrNesting == 0)
 515              		.loc 1 391 0
 516 024e 0B4B     		ldr	r3, .L38
 517 0250 1B78     		ldrb	r3, [r3]
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 17


 518 0252 002B     		cmp	r3, #0
 519 0254 09D1     		bne	.L35
 392:core/queue.c  ****     {
 393:core/queue.c  ****       m_os_ena_int();
 520              		.loc 1 393 0
 521 0256 0098     		ldr	r0, [sp]
 522 0258 FFF7FEFF 		bl	halRestoreInterrupts_oshal
 523 025c C046     		 nop
 394:core/queue.c  ****       schedule();
 524              		.loc 1 394 0
 525              		.code	16
 526 025e FFF7FEFF 		bl	schedule
 395:core/queue.c  ****       m_os_dis_int();
 527              		.loc 1 395 0
 528 0262 FFF7FEFF 		bl	halDisableInterrupts_oshal
 529 0266 0090     		str	r0, [sp]
 530 0268 C046     		 nop
 531              		.code	16
 532              	.L35:
 396:core/queue.c  ****     }
 397:core/queue.c  ****   }
 398:core/queue.c  ****   m_os_ena_int();
 533              		.loc 1 398 0
 534 026a 0098     		ldr	r0, [sp]
 535 026c FFF7FEFF 		bl	halRestoreInterrupts_oshal
 536 0270 C046     		 nop
 537              		.code	16
 538              	.L31:
 399:core/queue.c  **** }
 539              		.loc 1 399 0
 540 0272 01B0     		add	sp, sp, #4
 541              		@ sp needed for prologue
 542 0274 70BC     		pop	{r4, r5, r6}
 543 0276 01BC     		pop	{r0}
 544 0278 0047     		bx	r0
 545              	.L39:
 546 027a 0000     		.align	2
 547              	.L38:
 548 027c 00000000 		.word	isrNesting
 549              	.LFE7:
 550              		.size	osPostFrontQueue, .-osPostFrontQueue
 551              		.section	.debug_frame,"",%progbits
 552              	.Lframe0:
 553 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 554              	.LSCIE0:
 555 0004 FFFFFFFF 		.4byte	0xffffffff
 556 0008 01       		.byte	0x1
 557 0009 00       		.ascii	"\000"
 558 000a 01       		.uleb128 0x1
 559 000b 7C       		.sleb128 -4
 560 000c 0E       		.byte	0xe
 561 000d 0C       		.byte	0xc
 562 000e 0D       		.uleb128 0xd
 563 000f 00       		.uleb128 0x0
 564              		.align	2
 565              	.LECIE0:
 566              	.LSFDE0:
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 18


 567 0010 18000000 		.4byte	.LEFDE0-.LASFDE0
 568              	.LASFDE0:
 569 0014 00000000 		.4byte	.Lframe0
 570 0018 00000000 		.4byte	.LFB2
 571 001c 26000000 		.4byte	.LFE2-.LFB2
 572 0020 42       		.byte	0x4
 573              		.4byte	.LCFI0-.LFB2
 574 0021 0E       		.byte	0xe
 575 0022 10       		.uleb128 0x10
 576 0023 84       		.byte	0x84
 577 0024 04       		.uleb128 0x4
 578 0025 85       		.byte	0x85
 579 0026 03       		.uleb128 0x3
 580 0027 86       		.byte	0x86
 581 0028 02       		.uleb128 0x2
 582 0029 8E       		.byte	0x8e
 583 002a 01       		.uleb128 0x1
 584 002b 00       		.align	2
 585              	.LEFDE0:
 586              	.LSFDE2:
 587 002c 1C000000 		.4byte	.LEFDE2-.LASFDE2
 588              	.LASFDE2:
 589 0030 00000000 		.4byte	.Lframe0
 590 0034 28000000 		.4byte	.LFB3
 591 0038 BC000000 		.4byte	.LFE3-.LFB3
 592 003c 42       		.byte	0x4
 593              		.4byte	.LCFI1-.LFB3
 594 003d 0E       		.byte	0xe
 595 003e 14       		.uleb128 0x14
 596 003f 84       		.byte	0x84
 597 0040 05       		.uleb128 0x5
 598 0041 85       		.byte	0x85
 599 0042 04       		.uleb128 0x4
 600 0043 86       		.byte	0x86
 601 0044 03       		.uleb128 0x3
 602 0045 87       		.byte	0x87
 603 0046 02       		.uleb128 0x2
 604 0047 8E       		.byte	0x8e
 605 0048 01       		.uleb128 0x1
 606 0049 42       		.byte	0x4
 607              		.4byte	.LCFI2-.LCFI1
 608 004a 0E       		.byte	0xe
 609 004b 1C       		.uleb128 0x1c
 610              		.align	2
 611              	.LEFDE2:
 612              	.LSFDE4:
 613 004c 18000000 		.4byte	.LEFDE4-.LASFDE4
 614              	.LASFDE4:
 615 0050 00000000 		.4byte	.Lframe0
 616 0054 E4000000 		.4byte	.LFB4
 617 0058 4A000000 		.4byte	.LFE4-.LFB4
 618 005c 42       		.byte	0x4
 619              		.4byte	.LCFI3-.LFB4
 620 005d 0E       		.byte	0xe
 621 005e 0C       		.uleb128 0xc
 622 005f 84       		.byte	0x84
 623 0060 03       		.uleb128 0x3
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 19


 624 0061 85       		.byte	0x85
 625 0062 02       		.uleb128 0x2
 626 0063 8E       		.byte	0x8e
 627 0064 01       		.uleb128 0x1
 628 0065 44       		.byte	0x4
 629              		.4byte	.LCFI4-.LCFI3
 630 0066 0E       		.byte	0xe
 631 0067 10       		.uleb128 0x10
 632              		.align	2
 633              	.LEFDE4:
 634              	.LSFDE6:
 635 0068 18000000 		.4byte	.LEFDE6-.LASFDE6
 636              	.LASFDE6:
 637 006c 00000000 		.4byte	.Lframe0
 638 0070 30010000 		.4byte	.LFB5
 639 0074 34000000 		.4byte	.LFE5-.LFB5
 640 0078 42       		.byte	0x4
 641              		.4byte	.LCFI5-.LFB5
 642 0079 0E       		.byte	0xe
 643 007a 08       		.uleb128 0x8
 644 007b 84       		.byte	0x84
 645 007c 02       		.uleb128 0x2
 646 007d 8E       		.byte	0x8e
 647 007e 01       		.uleb128 0x1
 648 007f 44       		.byte	0x4
 649              		.4byte	.LCFI6-.LCFI5
 650 0080 0E       		.byte	0xe
 651 0081 0C       		.uleb128 0xc
 652 0082 0000     		.align	2
 653              	.LEFDE6:
 654              	.LSFDE8:
 655 0084 1C000000 		.4byte	.LEFDE8-.LASFDE8
 656              	.LASFDE8:
 657 0088 00000000 		.4byte	.Lframe0
 658 008c 64010000 		.4byte	.LFB6
 659 0090 8C000000 		.4byte	.LFE6-.LFB6
 660 0094 42       		.byte	0x4
 661              		.4byte	.LCFI7-.LFB6
 662 0095 0E       		.byte	0xe
 663 0096 10       		.uleb128 0x10
 664 0097 84       		.byte	0x84
 665 0098 04       		.uleb128 0x4
 666 0099 85       		.byte	0x85
 667 009a 03       		.uleb128 0x3
 668 009b 86       		.byte	0x86
 669 009c 02       		.uleb128 0x2
 670 009d 8E       		.byte	0x8e
 671 009e 01       		.uleb128 0x1
 672 009f 44       		.byte	0x4
 673              		.4byte	.LCFI8-.LCFI7
 674 00a0 0E       		.byte	0xe
 675 00a1 14       		.uleb128 0x14
 676 00a2 0000     		.align	2
 677              	.LEFDE8:
 678              	.LSFDE10:
 679 00a4 1C000000 		.4byte	.LEFDE10-.LASFDE10
 680              	.LASFDE10:
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 20


 681 00a8 00000000 		.4byte	.Lframe0
 682 00ac F0010000 		.4byte	.LFB7
 683 00b0 90000000 		.4byte	.LFE7-.LFB7
 684 00b4 42       		.byte	0x4
 685              		.4byte	.LCFI9-.LFB7
 686 00b5 0E       		.byte	0xe
 687 00b6 10       		.uleb128 0x10
 688 00b7 84       		.byte	0x84
 689 00b8 04       		.uleb128 0x4
 690 00b9 85       		.byte	0x85
 691 00ba 03       		.uleb128 0x3
 692 00bb 86       		.byte	0x86
 693 00bc 02       		.uleb128 0x2
 694 00bd 8E       		.byte	0x8e
 695 00be 01       		.uleb128 0x1
 696 00bf 44       		.byte	0x4
 697              		.4byte	.LCFI10-.LCFI9
 698 00c0 0E       		.byte	0xe
 699 00c1 14       		.uleb128 0x14
 700 00c2 0000     		.align	2
 701              	.LEFDE10:
 702              		.file 2 "core/queue.h"
 703              		.file 3 "core/event.h"
 704              		.file 4 "core/prioqueue.h"
 705              		.file 5 "core/pcb.h"
 706              		.file 6 "core/../api/general.h"
 707              		.file 7 "core/kernel.h"
 708              		.text
 709              	.Letext0:
 710              		.section	.debug_info
 711 0000 45040000 		.4byte	0x445
 712 0004 0200     		.2byte	0x2
 713 0006 00000000 		.4byte	.Ldebug_abbrev0
 714 000a 04       		.byte	0x4
 715 000b 01       		.uleb128 0x1
 716 000c 00000000 		.4byte	.Ldebug_line0
 717 0010 80020000 		.4byte	.Letext0
 718 0014 00000000 		.4byte	.Ltext0
 719 0018 11000000 		.4byte	.LASF52
 720 001c 01       		.byte	0x1
 721 001d 6E010000 		.4byte	.LASF53
 722 0021 AC010000 		.4byte	.LASF54
 723 0025 02       		.uleb128 0x2
 724 0026 74553800 		.ascii	"tU8\000"
 725 002a 06       		.byte	0x6
 726 002b 47       		.byte	0x47
 727 002c 30000000 		.4byte	0x30
 728 0030 03       		.uleb128 0x3
 729 0031 64000000 		.4byte	.LASF1
 730 0035 01       		.byte	0x1
 731 0036 08       		.byte	0x8
 732 0037 04       		.uleb128 0x4
 733 0038 A7010000 		.4byte	.LASF0
 734 003c 06       		.byte	0x6
 735 003d 48       		.byte	0x48
 736 003e 42000000 		.4byte	0x42
 737 0042 03       		.uleb128 0x3
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 21


 738 0043 9E000000 		.4byte	.LASF2
 739 0047 02       		.byte	0x2
 740 0048 07       		.byte	0x7
 741 0049 04       		.uleb128 0x4
 742 004a 3F020000 		.4byte	.LASF3
 743 004e 06       		.byte	0x6
 744 004f 49       		.byte	0x49
 745 0050 54000000 		.4byte	0x54
 746 0054 03       		.uleb128 0x3
 747 0055 45010000 		.4byte	.LASF4
 748 0059 04       		.byte	0x4
 749 005a 07       		.byte	0x7
 750 005b 03       		.uleb128 0x3
 751 005c 9B020000 		.4byte	.LASF5
 752 0060 01       		.byte	0x1
 753 0061 06       		.byte	0x6
 754 0062 03       		.uleb128 0x3
 755 0063 60020000 		.4byte	.LASF6
 756 0067 02       		.byte	0x2
 757 0068 05       		.byte	0x5
 758 0069 05       		.uleb128 0x5
 759 006a 696E7400 		.ascii	"int\000"
 760 006e 04       		.byte	0x4
 761 006f 05       		.byte	0x5
 762 0070 04       		.uleb128 0x4
 763 0071 B2020000 		.4byte	.LASF7
 764 0075 06       		.byte	0x6
 765 0076 4D       		.byte	0x4d
 766 0077 30000000 		.4byte	0x30
 767 007b 06       		.uleb128 0x6
 768 007c 30010000 		.4byte	0x130
 769 0080 EE000000 		.4byte	.LASF20
 770 0084 28       		.byte	0x28
 771 0085 05       		.byte	0x5
 772 0086 4D       		.byte	0x4d
 773 0087 07       		.uleb128 0x7
 774 0088 20010000 		.4byte	.LASF8
 775 008c 05       		.byte	0x5
 776 008d 4E       		.byte	0x4e
 777 008e 30010000 		.4byte	0x130
 778 0092 02       		.byte	0x2
 779 0093 23       		.byte	0x23
 780 0094 00       		.uleb128 0x0
 781 0095 07       		.uleb128 0x7
 782 0096 0C010000 		.4byte	.LASF9
 783 009a 05       		.byte	0x5
 784 009b 4F       		.byte	0x4f
 785 009c 36010000 		.4byte	0x136
 786 00a0 02       		.byte	0x2
 787 00a1 23       		.byte	0x23
 788 00a2 04       		.uleb128 0x4
 789 00a3 07       		.uleb128 0x7
 790 00a4 C5000000 		.4byte	.LASF10
 791 00a8 05       		.byte	0x5
 792 00a9 50       		.byte	0x50
 793 00aa 36010000 		.4byte	0x136
 794 00ae 02       		.byte	0x2
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 22


 795 00af 23       		.byte	0x23
 796 00b0 08       		.uleb128 0x8
 797 00b1 07       		.uleb128 0x7
 798 00b2 31010000 		.4byte	.LASF11
 799 00b6 05       		.byte	0x5
 800 00b7 51       		.byte	0x51
 801 00b8 36010000 		.4byte	0x136
 802 00bc 02       		.byte	0x2
 803 00bd 23       		.byte	0x23
 804 00be 0C       		.uleb128 0xc
 805 00bf 07       		.uleb128 0x7
 806 00c0 F8000000 		.4byte	.LASF12
 807 00c4 05       		.byte	0x5
 808 00c5 52       		.byte	0x52
 809 00c6 36010000 		.4byte	0x136
 810 00ca 02       		.byte	0x2
 811 00cb 23       		.byte	0x23
 812 00cc 10       		.uleb128 0x10
 813 00cd 07       		.uleb128 0x7
 814 00ce 8C020000 		.4byte	.LASF13
 815 00d2 05       		.byte	0x5
 816 00d3 53       		.byte	0x53
 817 00d4 36010000 		.4byte	0x136
 818 00d8 02       		.byte	0x2
 819 00d9 23       		.byte	0x23
 820 00da 14       		.uleb128 0x14
 821 00db 08       		.uleb128 0x8
 822 00dc 70696400 		.ascii	"pid\000"
 823 00e0 05       		.byte	0x5
 824 00e1 54       		.byte	0x54
 825 00e2 25000000 		.4byte	0x25
 826 00e6 02       		.byte	0x2
 827 00e7 23       		.byte	0x23
 828 00e8 18       		.uleb128 0x18
 829 00e9 07       		.uleb128 0x7
 830 00ea 0C000000 		.4byte	.LASF14
 831 00ee 05       		.byte	0x5
 832 00ef 55       		.byte	0x55
 833 00f0 25000000 		.4byte	0x25
 834 00f4 02       		.byte	0x2
 835 00f5 23       		.byte	0x23
 836 00f6 19       		.uleb128 0x19
 837 00f7 07       		.uleb128 0x7
 838 00f8 25010000 		.4byte	.LASF15
 839 00fc 05       		.byte	0x5
 840 00fd 56       		.byte	0x56
 841 00fe 25000000 		.4byte	0x25
 842 0102 02       		.byte	0x2
 843 0103 23       		.byte	0x23
 844 0104 1A       		.uleb128 0x1a
 845 0105 07       		.uleb128 0x7
 846 0106 A7020000 		.4byte	.LASF16
 847 010a 05       		.byte	0x5
 848 010b 57       		.byte	0x57
 849 010c 49000000 		.4byte	0x49
 850 0110 02       		.byte	0x2
 851 0111 23       		.byte	0x23
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 23


 852 0112 1C       		.uleb128 0x1c
 853 0113 07       		.uleb128 0x7
 854 0114 7B010000 		.4byte	.LASF17
 855 0118 05       		.byte	0x5
 856 0119 5A       		.byte	0x5a
 857 011a 30010000 		.4byte	0x130
 858 011e 02       		.byte	0x2
 859 011f 23       		.byte	0x23
 860 0120 20       		.uleb128 0x20
 861 0121 07       		.uleb128 0x7
 862 0122 52010000 		.4byte	.LASF18
 863 0126 05       		.byte	0x5
 864 0127 5B       		.byte	0x5b
 865 0128 37000000 		.4byte	0x37
 866 012c 02       		.byte	0x2
 867 012d 23       		.byte	0x23
 868 012e 24       		.uleb128 0x24
 869 012f 00       		.byte	0x0
 870 0130 09       		.uleb128 0x9
 871 0131 04       		.byte	0x4
 872 0132 25000000 		.4byte	0x25
 873 0136 09       		.uleb128 0x9
 874 0137 04       		.byte	0x4
 875 0138 7B000000 		.4byte	0x7b
 876 013c 04       		.uleb128 0x4
 877 013d 72000000 		.4byte	.LASF19
 878 0141 05       		.byte	0x5
 879 0142 5D       		.byte	0x5d
 880 0143 7B000000 		.4byte	0x7b
 881 0147 06       		.uleb128 0x6
 882 0148 70010000 		.4byte	0x170
 883 014c 9A010000 		.4byte	.LASF21
 884 0150 18       		.byte	0x18
 885 0151 04       		.byte	0x4
 886 0152 49       		.byte	0x49
 887 0153 07       		.uleb128 0x7
 888 0154 DE000000 		.4byte	.LASF22
 889 0158 04       		.byte	0x4
 890 0159 4A       		.byte	0x4a
 891 015a 70010000 		.4byte	0x170
 892 015e 02       		.byte	0x2
 893 015f 23       		.byte	0x23
 894 0160 00       		.uleb128 0x0
 895 0161 07       		.uleb128 0x7
 896 0162 33000000 		.4byte	.LASF23
 897 0166 04       		.byte	0x4
 898 0167 4B       		.byte	0x4b
 899 0168 87010000 		.4byte	0x187
 900 016c 02       		.byte	0x2
 901 016d 23       		.byte	0x23
 902 016e 14       		.uleb128 0x14
 903 016f 00       		.byte	0x0
 904 0170 0A       		.uleb128 0xa
 905 0171 80010000 		.4byte	0x180
 906 0175 87010000 		.4byte	0x187
 907 0179 0B       		.uleb128 0xb
 908 017a 80010000 		.4byte	0x180
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 24


 909 017e 04       		.byte	0x4
 910 017f 00       		.byte	0x0
 911 0180 03       		.uleb128 0x3
 912 0181 8C000000 		.4byte	.LASF24
 913 0185 04       		.byte	0x4
 914 0186 07       		.byte	0x7
 915 0187 09       		.uleb128 0x9
 916 0188 04       		.byte	0x4
 917 0189 3C010000 		.4byte	0x13c
 918 018d 04       		.uleb128 0x4
 919 018e 79000000 		.4byte	.LASF25
 920 0192 04       		.byte	0x4
 921 0193 4C       		.byte	0x4c
 922 0194 47010000 		.4byte	0x147
 923 0198 06       		.uleb128 0x6
 924 0199 B3010000 		.4byte	0x1b3
 925 019d 55020000 		.4byte	.LASF26
 926 01a1 18       		.byte	0x18
 927 01a2 03       		.byte	0x3
 928 01a3 46       		.byte	0x46
 929 01a4 07       		.uleb128 0x7
 930 01a5 5C010000 		.4byte	.LASF27
 931 01a9 03       		.byte	0x3
 932 01aa 47       		.byte	0x47
 933 01ab 8D010000 		.4byte	0x18d
 934 01af 02       		.byte	0x2
 935 01b0 23       		.byte	0x23
 936 01b1 00       		.uleb128 0x0
 937 01b2 00       		.byte	0x0
 938 01b3 04       		.uleb128 0x4
 939 01b4 4C020000 		.4byte	.LASF28
 940 01b8 03       		.byte	0x3
 941 01b9 48       		.byte	0x48
 942 01ba 98010000 		.4byte	0x198
 943 01be 06       		.uleb128 0x6
 944 01bf 2C020000 		.4byte	0x22c
 945 01c3 2A000000 		.4byte	.LASF29
 946 01c7 2C       		.byte	0x2c
 947 01c8 02       		.byte	0x2
 948 01c9 47       		.byte	0x47
 949 01ca 08       		.uleb128 0x8
 950 01cb 657600   		.ascii	"ev\000"
 951 01ce 02       		.byte	0x2
 952 01cf 48       		.byte	0x48
 953 01d0 B3010000 		.4byte	0x1b3
 954 01d4 02       		.byte	0x2
 955 01d5 23       		.byte	0x23
 956 01d6 00       		.uleb128 0x0
 957 01d7 07       		.uleb128 0x7
 958 01d8 5C000000 		.4byte	.LASF30
 959 01dc 02       		.byte	0x2
 960 01dd 49       		.byte	0x49
 961 01de 2C020000 		.4byte	0x22c
 962 01e2 02       		.byte	0x2
 963 01e3 23       		.byte	0x23
 964 01e4 18       		.uleb128 0x18
 965 01e5 07       		.uleb128 0x7
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 25


 966 01e6 B1000000 		.4byte	.LASF31
 967 01ea 02       		.byte	0x2
 968 01eb 4A       		.byte	0x4a
 969 01ec 2C020000 		.4byte	0x22c
 970 01f0 02       		.byte	0x2
 971 01f1 23       		.byte	0x23
 972 01f2 1C       		.uleb128 0x1c
 973 01f3 07       		.uleb128 0x7
 974 01f4 95010000 		.4byte	.LASF32
 975 01f8 02       		.byte	0x2
 976 01f9 4B       		.byte	0x4b
 977 01fa 2C020000 		.4byte	0x22c
 978 01fe 02       		.byte	0x2
 979 01ff 23       		.byte	0x23
 980 0200 20       		.uleb128 0x20
 981 0201 07       		.uleb128 0x7
 982 0202 E8000000 		.4byte	.LASF33
 983 0206 02       		.byte	0x2
 984 0207 4C       		.byte	0x4c
 985 0208 2C020000 		.4byte	0x22c
 986 020c 02       		.byte	0x2
 987 020d 23       		.byte	0x23
 988 020e 24       		.uleb128 0x24
 989 020f 07       		.uleb128 0x7
 990 0210 39000000 		.4byte	.LASF34
 991 0214 02       		.byte	0x2
 992 0215 4D       		.byte	0x4d
 993 0216 37000000 		.4byte	0x37
 994 021a 02       		.byte	0x2
 995 021b 23       		.byte	0x23
 996 021c 28       		.uleb128 0x28
 997 021d 07       		.uleb128 0x7
 998 021e 6A020000 		.4byte	.LASF35
 999 0222 02       		.byte	0x2
 1000 0223 4E       		.byte	0x4e
 1001 0224 37000000 		.4byte	0x37
 1002 0228 02       		.byte	0x2
 1003 0229 23       		.byte	0x23
 1004 022a 2A       		.uleb128 0x2a
 1005 022b 00       		.byte	0x0
 1006 022c 09       		.uleb128 0x9
 1007 022d 04       		.byte	0x4
 1008 022e 32020000 		.4byte	0x232
 1009 0232 0C       		.uleb128 0xc
 1010 0233 04       		.byte	0x4
 1011 0234 04       		.uleb128 0x4
 1012 0235 B8020000 		.4byte	.LASF36
 1013 0239 02       		.byte	0x2
 1014 023a 4F       		.byte	0x4f
 1015 023b BE010000 		.4byte	0x1be
 1016 023f 0D       		.uleb128 0xd
 1017 0240 7E020000 		.4byte	0x27e
 1018 0244 01       		.byte	0x1
 1019 0245 B7000000 		.4byte	.LASF40
 1020 0249 01       		.byte	0x1
 1021 024a 5D       		.byte	0x5d
 1022 024b 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 26


 1023 024c 00000000 		.4byte	.LFB2
 1024 0250 26000000 		.4byte	.LFE2
 1025 0254 01       		.byte	0x1
 1026 0255 5D       		.byte	0x5d
 1027 0256 0E       		.uleb128 0xe
 1028 0257 83010000 		.4byte	.LASF37
 1029 025b 01       		.byte	0x1
 1030 025c 5A       		.byte	0x5a
 1031 025d 7E020000 		.4byte	0x27e
 1032 0261 01       		.byte	0x1
 1033 0262 54       		.byte	0x54
 1034 0263 0E       		.uleb128 0xe
 1035 0264 73020000 		.4byte	.LASF38
 1036 0268 01       		.byte	0x1
 1037 0269 5B       		.byte	0x5b
 1038 026a 2C020000 		.4byte	0x22c
 1039 026e 01       		.byte	0x1
 1040 026f 55       		.byte	0x55
 1041 0270 0E       		.uleb128 0xe
 1042 0271 AD020000 		.4byte	.LASF39
 1043 0275 01       		.byte	0x1
 1044 0276 5C       		.byte	0x5c
 1045 0277 37000000 		.4byte	0x37
 1046 027b 01       		.byte	0x1
 1047 027c 56       		.byte	0x56
 1048 027d 00       		.byte	0x0
 1049 027e 09       		.uleb128 0x9
 1050 027f 04       		.byte	0x4
 1051 0280 34020000 		.4byte	0x234
 1052 0284 0F       		.uleb128 0xf
 1053 0285 FD020000 		.4byte	0x2fd
 1054 0289 01       		.byte	0x1
 1055 028a 00000000 		.4byte	.LASF41
 1056 028e 01       		.byte	0x1
 1057 028f 86       		.byte	0x86
 1058 0290 01       		.byte	0x1
 1059 0291 32020000 		.4byte	0x232
 1060 0295 28000000 		.4byte	.LFB3
 1061 0299 E4000000 		.4byte	.LFE3
 1062 029d 01       		.byte	0x1
 1063 029e 5D       		.byte	0x5d
 1064 029f 0E       		.uleb128 0xe
 1065 02a0 83010000 		.4byte	.LASF37
 1066 02a4 01       		.byte	0x1
 1067 02a5 83       		.byte	0x83
 1068 02a6 7E020000 		.4byte	0x27e
 1069 02aa 01       		.byte	0x1
 1070 02ab 54       		.byte	0x54
 1071 02ac 0E       		.uleb128 0xe
 1072 02ad 44020000 		.4byte	.LASF42
 1073 02b1 01       		.byte	0x1
 1074 02b2 84       		.byte	0x84
 1075 02b3 37000000 		.4byte	0x37
 1076 02b7 01       		.byte	0x1
 1077 02b8 57       		.byte	0x57
 1078 02b9 0E       		.uleb128 0xe
 1079 02ba 2A010000 		.4byte	.LASF43
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 27


 1080 02be 01       		.byte	0x1
 1081 02bf 85       		.byte	0x85
 1082 02c0 30010000 		.4byte	0x130
 1083 02c4 01       		.byte	0x1
 1084 02c5 55       		.byte	0x55
 1085 02c6 10       		.uleb128 0x10
 1086 02c7 54000000 		.4byte	.LASF44
 1087 02cb 01       		.byte	0x1
 1088 02cc 87       		.byte	0x87
 1089 02cd FD020000 		.4byte	0x2fd
 1090 02d1 02       		.byte	0x2
 1091 02d2 91       		.byte	0x91
 1092 02d3 04       		.sleb128 4
 1093 02d4 10       		.uleb128 0x10
 1094 02d5 84000000 		.4byte	.LASF45
 1095 02d9 01       		.byte	0x1
 1096 02da 88       		.byte	0x88
 1097 02db 70000000 		.4byte	0x70
 1098 02df 02       		.byte	0x2
 1099 02e0 91       		.byte	0x91
 1100 02e1 00       		.sleb128 0
 1101 02e2 11       		.uleb128 0x11
 1102 02e3 6D736700 		.ascii	"msg\000"
 1103 02e7 01       		.byte	0x1
 1104 02e8 89       		.byte	0x89
 1105 02e9 32020000 		.4byte	0x232
 1106 02ed 01       		.byte	0x1
 1107 02ee 56       		.byte	0x56
 1108 02ef 11       		.uleb128 0x11
 1109 02f0 72657400 		.ascii	"ret\000"
 1110 02f4 01       		.byte	0x1
 1111 02f5 8A       		.byte	0x8a
 1112 02f6 25000000 		.4byte	0x25
 1113 02fa 01       		.byte	0x1
 1114 02fb 50       		.byte	0x50
 1115 02fc 00       		.byte	0x0
 1116 02fd 12       		.uleb128 0x12
 1117 02fe 49000000 		.4byte	0x49
 1118 0302 0F       		.uleb128 0xf
 1119 0303 53030000 		.4byte	0x353
 1120 0307 01       		.byte	0x1
 1121 0308 7E020000 		.4byte	.LASF46
 1122 030c 01       		.byte	0x1
 1123 030d D7       		.byte	0xd7
 1124 030e 01       		.byte	0x1
 1125 030f 32020000 		.4byte	0x232
 1126 0313 E4000000 		.4byte	.LFB4
 1127 0317 2E010000 		.4byte	.LFE4
 1128 031b 01       		.byte	0x1
 1129 031c 5D       		.byte	0x5d
 1130 031d 0E       		.uleb128 0xe
 1131 031e 83010000 		.4byte	.LASF37
 1132 0322 01       		.byte	0x1
 1133 0323 D5       		.byte	0xd5
 1134 0324 7E020000 		.4byte	0x27e
 1135 0328 01       		.byte	0x1
 1136 0329 54       		.byte	0x54
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 28


 1137 032a 0E       		.uleb128 0xe
 1138 032b 2A010000 		.4byte	.LASF43
 1139 032f 01       		.byte	0x1
 1140 0330 D6       		.byte	0xd6
 1141 0331 30010000 		.4byte	0x130
 1142 0335 01       		.byte	0x1
 1143 0336 51       		.byte	0x51
 1144 0337 10       		.uleb128 0x10
 1145 0338 54000000 		.4byte	.LASF44
 1146 033c 01       		.byte	0x1
 1147 033d D8       		.byte	0xd8
 1148 033e FD020000 		.4byte	0x2fd
 1149 0342 02       		.byte	0x2
 1150 0343 91       		.byte	0x91
 1151 0344 00       		.sleb128 0
 1152 0345 10       		.uleb128 0x10
 1153 0346 D9000000 		.4byte	.LASF47
 1154 034a 01       		.byte	0x1
 1155 034b D9       		.byte	0xd9
 1156 034c 32020000 		.4byte	0x232
 1157 0350 01       		.byte	0x1
 1158 0351 55       		.byte	0x55
 1159 0352 00       		.byte	0x0
 1160 0353 13       		.uleb128 0x13
 1161 0354 97030000 		.4byte	0x397
 1162 0358 01       		.byte	0x1
 1163 0359 1D000000 		.4byte	.LASF48
 1164 035d 01       		.byte	0x1
 1165 035e 0301     		.2byte	0x103
 1166 0360 01       		.byte	0x1
 1167 0361 30010000 		.4byte	.LFB5
 1168 0365 64010000 		.4byte	.LFE5
 1169 0369 01       		.byte	0x1
 1170 036a 5D       		.byte	0x5d
 1171 036b 14       		.uleb128 0x14
 1172 036c 83010000 		.4byte	.LASF37
 1173 0370 01       		.byte	0x1
 1174 0371 0101     		.2byte	0x101
 1175 0373 7E020000 		.4byte	0x27e
 1176 0377 01       		.byte	0x1
 1177 0378 54       		.byte	0x54
 1178 0379 14       		.uleb128 0x14
 1179 037a 2A010000 		.4byte	.LASF43
 1180 037e 01       		.byte	0x1
 1181 037f 0201     		.2byte	0x102
 1182 0381 30010000 		.4byte	0x130
 1183 0385 01       		.byte	0x1
 1184 0386 51       		.byte	0x51
 1185 0387 15       		.uleb128 0x15
 1186 0388 54000000 		.4byte	.LASF44
 1187 038c 01       		.byte	0x1
 1188 038d 0401     		.2byte	0x104
 1189 038f FD020000 		.4byte	0x2fd
 1190 0393 02       		.byte	0x2
 1191 0394 91       		.byte	0x91
 1192 0395 00       		.sleb128 0
 1193 0396 00       		.byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 29


 1194 0397 13       		.uleb128 0x13
 1195 0398 E9030000 		.4byte	0x3e9
 1196 039c 01       		.byte	0x1
 1197 039d 62010000 		.4byte	.LASF49
 1198 03a1 01       		.byte	0x1
 1199 03a2 2A01     		.2byte	0x12a
 1200 03a4 01       		.byte	0x1
 1201 03a5 64010000 		.4byte	.LFB6
 1202 03a9 F0010000 		.4byte	.LFE6
 1203 03ad 01       		.byte	0x1
 1204 03ae 5D       		.byte	0x5d
 1205 03af 14       		.uleb128 0x14
 1206 03b0 83010000 		.4byte	.LASF37
 1207 03b4 01       		.byte	0x1
 1208 03b5 2701     		.2byte	0x127
 1209 03b7 7E020000 		.4byte	0x27e
 1210 03bb 01       		.byte	0x1
 1211 03bc 54       		.byte	0x54
 1212 03bd 16       		.uleb128 0x16
 1213 03be 6D736700 		.ascii	"msg\000"
 1214 03c2 01       		.byte	0x1
 1215 03c3 2801     		.2byte	0x128
 1216 03c5 32020000 		.4byte	0x232
 1217 03c9 01       		.byte	0x1
 1218 03ca 56       		.byte	0x56
 1219 03cb 14       		.uleb128 0x14
 1220 03cc 2A010000 		.4byte	.LASF43
 1221 03d0 01       		.byte	0x1
 1222 03d1 2901     		.2byte	0x129
 1223 03d3 30010000 		.4byte	0x130
 1224 03d7 01       		.byte	0x1
 1225 03d8 55       		.byte	0x55
 1226 03d9 15       		.uleb128 0x15
 1227 03da 54000000 		.4byte	.LASF44
 1228 03de 01       		.byte	0x1
 1229 03df 2B01     		.2byte	0x12b
 1230 03e1 FD020000 		.4byte	0x2fd
 1231 03e5 02       		.byte	0x2
 1232 03e6 91       		.byte	0x91
 1233 03e7 00       		.sleb128 0
 1234 03e8 00       		.byte	0x0
 1235 03e9 13       		.uleb128 0x13
 1236 03ea 3B040000 		.4byte	0x43b
 1237 03ee 01       		.byte	0x1
 1238 03ef 43000000 		.4byte	.LASF50
 1239 03f3 01       		.byte	0x1
 1240 03f4 6801     		.2byte	0x168
 1241 03f6 01       		.byte	0x1
 1242 03f7 F0010000 		.4byte	.LFB7
 1243 03fb 80020000 		.4byte	.LFE7
 1244 03ff 01       		.byte	0x1
 1245 0400 5D       		.byte	0x5d
 1246 0401 14       		.uleb128 0x14
 1247 0402 83010000 		.4byte	.LASF37
 1248 0406 01       		.byte	0x1
 1249 0407 6501     		.2byte	0x165
 1250 0409 7E020000 		.4byte	0x27e
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 30


 1251 040d 01       		.byte	0x1
 1252 040e 54       		.byte	0x54
 1253 040f 16       		.uleb128 0x16
 1254 0410 6D736700 		.ascii	"msg\000"
 1255 0414 01       		.byte	0x1
 1256 0415 6601     		.2byte	0x166
 1257 0417 32020000 		.4byte	0x232
 1258 041b 01       		.byte	0x1
 1259 041c 56       		.byte	0x56
 1260 041d 14       		.uleb128 0x14
 1261 041e 2A010000 		.4byte	.LASF43
 1262 0422 01       		.byte	0x1
 1263 0423 6701     		.2byte	0x167
 1264 0425 30010000 		.4byte	0x130
 1265 0429 01       		.byte	0x1
 1266 042a 55       		.byte	0x55
 1267 042b 15       		.uleb128 0x15
 1268 042c 54000000 		.4byte	.LASF44
 1269 0430 01       		.byte	0x1
 1270 0431 6901     		.2byte	0x169
 1271 0433 FD020000 		.4byte	0x2fd
 1272 0437 02       		.byte	0x2
 1273 0438 91       		.byte	0x91
 1274 0439 00       		.sleb128 0
 1275 043a 00       		.byte	0x0
 1276 043b 17       		.uleb128 0x17
 1277 043c 8A010000 		.4byte	.LASF51
 1278 0440 07       		.byte	0x7
 1279 0441 4F       		.byte	0x4f
 1280 0442 25000000 		.4byte	0x25
 1281 0446 01       		.byte	0x1
 1282 0447 01       		.byte	0x1
 1283 0448 00       		.byte	0x0
 1284              		.section	.debug_abbrev
 1285 0000 01       		.uleb128 0x1
 1286 0001 11       		.uleb128 0x11
 1287 0002 01       		.byte	0x1
 1288 0003 10       		.uleb128 0x10
 1289 0004 06       		.uleb128 0x6
 1290 0005 12       		.uleb128 0x12
 1291 0006 01       		.uleb128 0x1
 1292 0007 11       		.uleb128 0x11
 1293 0008 01       		.uleb128 0x1
 1294 0009 25       		.uleb128 0x25
 1295 000a 0E       		.uleb128 0xe
 1296 000b 13       		.uleb128 0x13
 1297 000c 0B       		.uleb128 0xb
 1298 000d 03       		.uleb128 0x3
 1299 000e 0E       		.uleb128 0xe
 1300 000f 1B       		.uleb128 0x1b
 1301 0010 0E       		.uleb128 0xe
 1302 0011 00       		.byte	0x0
 1303 0012 00       		.byte	0x0
 1304 0013 02       		.uleb128 0x2
 1305 0014 16       		.uleb128 0x16
 1306 0015 00       		.byte	0x0
 1307 0016 03       		.uleb128 0x3
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 31


 1308 0017 08       		.uleb128 0x8
 1309 0018 3A       		.uleb128 0x3a
 1310 0019 0B       		.uleb128 0xb
 1311 001a 3B       		.uleb128 0x3b
 1312 001b 0B       		.uleb128 0xb
 1313 001c 49       		.uleb128 0x49
 1314 001d 13       		.uleb128 0x13
 1315 001e 00       		.byte	0x0
 1316 001f 00       		.byte	0x0
 1317 0020 03       		.uleb128 0x3
 1318 0021 24       		.uleb128 0x24
 1319 0022 00       		.byte	0x0
 1320 0023 03       		.uleb128 0x3
 1321 0024 0E       		.uleb128 0xe
 1322 0025 0B       		.uleb128 0xb
 1323 0026 0B       		.uleb128 0xb
 1324 0027 3E       		.uleb128 0x3e
 1325 0028 0B       		.uleb128 0xb
 1326 0029 00       		.byte	0x0
 1327 002a 00       		.byte	0x0
 1328 002b 04       		.uleb128 0x4
 1329 002c 16       		.uleb128 0x16
 1330 002d 00       		.byte	0x0
 1331 002e 03       		.uleb128 0x3
 1332 002f 0E       		.uleb128 0xe
 1333 0030 3A       		.uleb128 0x3a
 1334 0031 0B       		.uleb128 0xb
 1335 0032 3B       		.uleb128 0x3b
 1336 0033 0B       		.uleb128 0xb
 1337 0034 49       		.uleb128 0x49
 1338 0035 13       		.uleb128 0x13
 1339 0036 00       		.byte	0x0
 1340 0037 00       		.byte	0x0
 1341 0038 05       		.uleb128 0x5
 1342 0039 24       		.uleb128 0x24
 1343 003a 00       		.byte	0x0
 1344 003b 03       		.uleb128 0x3
 1345 003c 08       		.uleb128 0x8
 1346 003d 0B       		.uleb128 0xb
 1347 003e 0B       		.uleb128 0xb
 1348 003f 3E       		.uleb128 0x3e
 1349 0040 0B       		.uleb128 0xb
 1350 0041 00       		.byte	0x0
 1351 0042 00       		.byte	0x0
 1352 0043 06       		.uleb128 0x6
 1353 0044 13       		.uleb128 0x13
 1354 0045 01       		.byte	0x1
 1355 0046 01       		.uleb128 0x1
 1356 0047 13       		.uleb128 0x13
 1357 0048 03       		.uleb128 0x3
 1358 0049 0E       		.uleb128 0xe
 1359 004a 0B       		.uleb128 0xb
 1360 004b 0B       		.uleb128 0xb
 1361 004c 3A       		.uleb128 0x3a
 1362 004d 0B       		.uleb128 0xb
 1363 004e 3B       		.uleb128 0x3b
 1364 004f 0B       		.uleb128 0xb
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 32


 1365 0050 00       		.byte	0x0
 1366 0051 00       		.byte	0x0
 1367 0052 07       		.uleb128 0x7
 1368 0053 0D       		.uleb128 0xd
 1369 0054 00       		.byte	0x0
 1370 0055 03       		.uleb128 0x3
 1371 0056 0E       		.uleb128 0xe
 1372 0057 3A       		.uleb128 0x3a
 1373 0058 0B       		.uleb128 0xb
 1374 0059 3B       		.uleb128 0x3b
 1375 005a 0B       		.uleb128 0xb
 1376 005b 49       		.uleb128 0x49
 1377 005c 13       		.uleb128 0x13
 1378 005d 38       		.uleb128 0x38
 1379 005e 0A       		.uleb128 0xa
 1380 005f 00       		.byte	0x0
 1381 0060 00       		.byte	0x0
 1382 0061 08       		.uleb128 0x8
 1383 0062 0D       		.uleb128 0xd
 1384 0063 00       		.byte	0x0
 1385 0064 03       		.uleb128 0x3
 1386 0065 08       		.uleb128 0x8
 1387 0066 3A       		.uleb128 0x3a
 1388 0067 0B       		.uleb128 0xb
 1389 0068 3B       		.uleb128 0x3b
 1390 0069 0B       		.uleb128 0xb
 1391 006a 49       		.uleb128 0x49
 1392 006b 13       		.uleb128 0x13
 1393 006c 38       		.uleb128 0x38
 1394 006d 0A       		.uleb128 0xa
 1395 006e 00       		.byte	0x0
 1396 006f 00       		.byte	0x0
 1397 0070 09       		.uleb128 0x9
 1398 0071 0F       		.uleb128 0xf
 1399 0072 00       		.byte	0x0
 1400 0073 0B       		.uleb128 0xb
 1401 0074 0B       		.uleb128 0xb
 1402 0075 49       		.uleb128 0x49
 1403 0076 13       		.uleb128 0x13
 1404 0077 00       		.byte	0x0
 1405 0078 00       		.byte	0x0
 1406 0079 0A       		.uleb128 0xa
 1407 007a 01       		.uleb128 0x1
 1408 007b 01       		.byte	0x1
 1409 007c 01       		.uleb128 0x1
 1410 007d 13       		.uleb128 0x13
 1411 007e 49       		.uleb128 0x49
 1412 007f 13       		.uleb128 0x13
 1413 0080 00       		.byte	0x0
 1414 0081 00       		.byte	0x0
 1415 0082 0B       		.uleb128 0xb
 1416 0083 21       		.uleb128 0x21
 1417 0084 00       		.byte	0x0
 1418 0085 49       		.uleb128 0x49
 1419 0086 13       		.uleb128 0x13
 1420 0087 2F       		.uleb128 0x2f
 1421 0088 0B       		.uleb128 0xb
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 33


 1422 0089 00       		.byte	0x0
 1423 008a 00       		.byte	0x0
 1424 008b 0C       		.uleb128 0xc
 1425 008c 0F       		.uleb128 0xf
 1426 008d 00       		.byte	0x0
 1427 008e 0B       		.uleb128 0xb
 1428 008f 0B       		.uleb128 0xb
 1429 0090 00       		.byte	0x0
 1430 0091 00       		.byte	0x0
 1431 0092 0D       		.uleb128 0xd
 1432 0093 2E       		.uleb128 0x2e
 1433 0094 01       		.byte	0x1
 1434 0095 01       		.uleb128 0x1
 1435 0096 13       		.uleb128 0x13
 1436 0097 3F       		.uleb128 0x3f
 1437 0098 0C       		.uleb128 0xc
 1438 0099 03       		.uleb128 0x3
 1439 009a 0E       		.uleb128 0xe
 1440 009b 3A       		.uleb128 0x3a
 1441 009c 0B       		.uleb128 0xb
 1442 009d 3B       		.uleb128 0x3b
 1443 009e 0B       		.uleb128 0xb
 1444 009f 27       		.uleb128 0x27
 1445 00a0 0C       		.uleb128 0xc
 1446 00a1 11       		.uleb128 0x11
 1447 00a2 01       		.uleb128 0x1
 1448 00a3 12       		.uleb128 0x12
 1449 00a4 01       		.uleb128 0x1
 1450 00a5 40       		.uleb128 0x40
 1451 00a6 0A       		.uleb128 0xa
 1452 00a7 00       		.byte	0x0
 1453 00a8 00       		.byte	0x0
 1454 00a9 0E       		.uleb128 0xe
 1455 00aa 05       		.uleb128 0x5
 1456 00ab 00       		.byte	0x0
 1457 00ac 03       		.uleb128 0x3
 1458 00ad 0E       		.uleb128 0xe
 1459 00ae 3A       		.uleb128 0x3a
 1460 00af 0B       		.uleb128 0xb
 1461 00b0 3B       		.uleb128 0x3b
 1462 00b1 0B       		.uleb128 0xb
 1463 00b2 49       		.uleb128 0x49
 1464 00b3 13       		.uleb128 0x13
 1465 00b4 02       		.uleb128 0x2
 1466 00b5 0A       		.uleb128 0xa
 1467 00b6 00       		.byte	0x0
 1468 00b7 00       		.byte	0x0
 1469 00b8 0F       		.uleb128 0xf
 1470 00b9 2E       		.uleb128 0x2e
 1471 00ba 01       		.byte	0x1
 1472 00bb 01       		.uleb128 0x1
 1473 00bc 13       		.uleb128 0x13
 1474 00bd 3F       		.uleb128 0x3f
 1475 00be 0C       		.uleb128 0xc
 1476 00bf 03       		.uleb128 0x3
 1477 00c0 0E       		.uleb128 0xe
 1478 00c1 3A       		.uleb128 0x3a
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 34


 1479 00c2 0B       		.uleb128 0xb
 1480 00c3 3B       		.uleb128 0x3b
 1481 00c4 0B       		.uleb128 0xb
 1482 00c5 27       		.uleb128 0x27
 1483 00c6 0C       		.uleb128 0xc
 1484 00c7 49       		.uleb128 0x49
 1485 00c8 13       		.uleb128 0x13
 1486 00c9 11       		.uleb128 0x11
 1487 00ca 01       		.uleb128 0x1
 1488 00cb 12       		.uleb128 0x12
 1489 00cc 01       		.uleb128 0x1
 1490 00cd 40       		.uleb128 0x40
 1491 00ce 0A       		.uleb128 0xa
 1492 00cf 00       		.byte	0x0
 1493 00d0 00       		.byte	0x0
 1494 00d1 10       		.uleb128 0x10
 1495 00d2 34       		.uleb128 0x34
 1496 00d3 00       		.byte	0x0
 1497 00d4 03       		.uleb128 0x3
 1498 00d5 0E       		.uleb128 0xe
 1499 00d6 3A       		.uleb128 0x3a
 1500 00d7 0B       		.uleb128 0xb
 1501 00d8 3B       		.uleb128 0x3b
 1502 00d9 0B       		.uleb128 0xb
 1503 00da 49       		.uleb128 0x49
 1504 00db 13       		.uleb128 0x13
 1505 00dc 02       		.uleb128 0x2
 1506 00dd 0A       		.uleb128 0xa
 1507 00de 00       		.byte	0x0
 1508 00df 00       		.byte	0x0
 1509 00e0 11       		.uleb128 0x11
 1510 00e1 34       		.uleb128 0x34
 1511 00e2 00       		.byte	0x0
 1512 00e3 03       		.uleb128 0x3
 1513 00e4 08       		.uleb128 0x8
 1514 00e5 3A       		.uleb128 0x3a
 1515 00e6 0B       		.uleb128 0xb
 1516 00e7 3B       		.uleb128 0x3b
 1517 00e8 0B       		.uleb128 0xb
 1518 00e9 49       		.uleb128 0x49
 1519 00ea 13       		.uleb128 0x13
 1520 00eb 02       		.uleb128 0x2
 1521 00ec 0A       		.uleb128 0xa
 1522 00ed 00       		.byte	0x0
 1523 00ee 00       		.byte	0x0
 1524 00ef 12       		.uleb128 0x12
 1525 00f0 35       		.uleb128 0x35
 1526 00f1 00       		.byte	0x0
 1527 00f2 49       		.uleb128 0x49
 1528 00f3 13       		.uleb128 0x13
 1529 00f4 00       		.byte	0x0
 1530 00f5 00       		.byte	0x0
 1531 00f6 13       		.uleb128 0x13
 1532 00f7 2E       		.uleb128 0x2e
 1533 00f8 01       		.byte	0x1
 1534 00f9 01       		.uleb128 0x1
 1535 00fa 13       		.uleb128 0x13
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 35


 1536 00fb 3F       		.uleb128 0x3f
 1537 00fc 0C       		.uleb128 0xc
 1538 00fd 03       		.uleb128 0x3
 1539 00fe 0E       		.uleb128 0xe
 1540 00ff 3A       		.uleb128 0x3a
 1541 0100 0B       		.uleb128 0xb
 1542 0101 3B       		.uleb128 0x3b
 1543 0102 05       		.uleb128 0x5
 1544 0103 27       		.uleb128 0x27
 1545 0104 0C       		.uleb128 0xc
 1546 0105 11       		.uleb128 0x11
 1547 0106 01       		.uleb128 0x1
 1548 0107 12       		.uleb128 0x12
 1549 0108 01       		.uleb128 0x1
 1550 0109 40       		.uleb128 0x40
 1551 010a 0A       		.uleb128 0xa
 1552 010b 00       		.byte	0x0
 1553 010c 00       		.byte	0x0
 1554 010d 14       		.uleb128 0x14
 1555 010e 05       		.uleb128 0x5
 1556 010f 00       		.byte	0x0
 1557 0110 03       		.uleb128 0x3
 1558 0111 0E       		.uleb128 0xe
 1559 0112 3A       		.uleb128 0x3a
 1560 0113 0B       		.uleb128 0xb
 1561 0114 3B       		.uleb128 0x3b
 1562 0115 05       		.uleb128 0x5
 1563 0116 49       		.uleb128 0x49
 1564 0117 13       		.uleb128 0x13
 1565 0118 02       		.uleb128 0x2
 1566 0119 0A       		.uleb128 0xa
 1567 011a 00       		.byte	0x0
 1568 011b 00       		.byte	0x0
 1569 011c 15       		.uleb128 0x15
 1570 011d 34       		.uleb128 0x34
 1571 011e 00       		.byte	0x0
 1572 011f 03       		.uleb128 0x3
 1573 0120 0E       		.uleb128 0xe
 1574 0121 3A       		.uleb128 0x3a
 1575 0122 0B       		.uleb128 0xb
 1576 0123 3B       		.uleb128 0x3b
 1577 0124 05       		.uleb128 0x5
 1578 0125 49       		.uleb128 0x49
 1579 0126 13       		.uleb128 0x13
 1580 0127 02       		.uleb128 0x2
 1581 0128 0A       		.uleb128 0xa
 1582 0129 00       		.byte	0x0
 1583 012a 00       		.byte	0x0
 1584 012b 16       		.uleb128 0x16
 1585 012c 05       		.uleb128 0x5
 1586 012d 00       		.byte	0x0
 1587 012e 03       		.uleb128 0x3
 1588 012f 08       		.uleb128 0x8
 1589 0130 3A       		.uleb128 0x3a
 1590 0131 0B       		.uleb128 0xb
 1591 0132 3B       		.uleb128 0x3b
 1592 0133 05       		.uleb128 0x5
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 36


 1593 0134 49       		.uleb128 0x49
 1594 0135 13       		.uleb128 0x13
 1595 0136 02       		.uleb128 0x2
 1596 0137 0A       		.uleb128 0xa
 1597 0138 00       		.byte	0x0
 1598 0139 00       		.byte	0x0
 1599 013a 17       		.uleb128 0x17
 1600 013b 34       		.uleb128 0x34
 1601 013c 00       		.byte	0x0
 1602 013d 03       		.uleb128 0x3
 1603 013e 0E       		.uleb128 0xe
 1604 013f 3A       		.uleb128 0x3a
 1605 0140 0B       		.uleb128 0xb
 1606 0141 3B       		.uleb128 0x3b
 1607 0142 0B       		.uleb128 0xb
 1608 0143 49       		.uleb128 0x49
 1609 0144 13       		.uleb128 0x13
 1610 0145 3F       		.uleb128 0x3f
 1611 0146 0C       		.uleb128 0xc
 1612 0147 3C       		.uleb128 0x3c
 1613 0148 0C       		.uleb128 0xc
 1614 0149 00       		.byte	0x0
 1615 014a 00       		.byte	0x0
 1616 014b 00       		.byte	0x0
 1617              		.section	.debug_pubnames,"",%progbits
 1618 0000 78000000 		.4byte	0x78
 1619 0004 0200     		.2byte	0x2
 1620 0006 00000000 		.4byte	.Ldebug_info0
 1621 000a 49040000 		.4byte	0x449
 1622 000e 3F020000 		.4byte	0x23f
 1623 0012 6F734372 		.ascii	"osCreateQueue\000"
 1623      65617465 
 1623      51756575 
 1623      6500
 1624 0020 84020000 		.4byte	0x284
 1625 0024 6F735065 		.ascii	"osPendQueue\000"
 1625      6E645175 
 1625      65756500 
 1626 0030 02030000 		.4byte	0x302
 1627 0034 6F734163 		.ascii	"osAcceptQueue\000"
 1627      63657074 
 1627      51756575 
 1627      6500
 1628 0042 53030000 		.4byte	0x353
 1629 0046 6F73466C 		.ascii	"osFlushQueue\000"
 1629      75736851 
 1629      75657565 
 1629      00
 1630 0053 97030000 		.4byte	0x397
 1631 0057 6F73506F 		.ascii	"osPostQueue\000"
 1631      73745175 
 1631      65756500 
 1632 0063 E9030000 		.4byte	0x3e9
 1633 0067 6F73506F 		.ascii	"osPostFrontQueue\000"
 1633      73744672 
 1633      6F6E7451 
 1633      75657565 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 37


 1633      00
 1634 0078 00000000 		.4byte	0x0
 1635              		.section	.debug_aranges,"",%progbits
 1636 0000 1C000000 		.4byte	0x1c
 1637 0004 0200     		.2byte	0x2
 1638 0006 00000000 		.4byte	.Ldebug_info0
 1639 000a 04       		.byte	0x4
 1640 000b 00       		.byte	0x0
 1641 000c 0000     		.2byte	0x0
 1642 000e 0000     		.2byte	0x0
 1643 0010 00000000 		.4byte	.Ltext0
 1644 0014 80020000 		.4byte	.Letext0-.Ltext0
 1645 0018 00000000 		.4byte	0x0
 1646 001c 00000000 		.4byte	0x0
 1647              		.section	.debug_str,"MS",%progbits,1
 1648              	.LASF41:
 1649 0000 6F735065 		.ascii	"osPendQueue\000"
 1649      6E645175 
 1649      65756500 
 1650              	.LASF14:
 1651 000c 7072696F 		.ascii	"prio\000"
 1651      00
 1652              	.LASF52:
 1653 0011 474E5520 		.ascii	"GNU C 3.4.3\000"
 1653      4320332E 
 1653      342E3300 
 1654              	.LASF48:
 1655 001d 6F73466C 		.ascii	"osFlushQueue\000"
 1655      75736851 
 1655      75657565 
 1655      00
 1656              	.LASF29:
 1657 002a 74517565 		.ascii	"tQueue__\000"
 1657      75655F5F 
 1657      00
 1658              	.LASF23:
 1659 0033 70504342 		.ascii	"pPCBs\000"
 1659      7300
 1660              	.LASF34:
 1661 0039 71756575 		.ascii	"queueSize\000"
 1661      6553697A 
 1661      6500
 1662              	.LASF50:
 1663 0043 6F73506F 		.ascii	"osPostFrontQueue\000"
 1663      73744672 
 1663      6F6E7451 
 1663      75657565 
 1663      00
 1664              	.LASF44:
 1665 0054 6C6F6361 		.ascii	"localSR\000"
 1665      6C535200 
 1666              	.LASF30:
 1667 005c 70515374 		.ascii	"pQStart\000"
 1667      61727400 
 1668              	.LASF1:
 1669 0064 756E7369 		.ascii	"unsigned char\000"
 1669      676E6564 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 38


 1669      20636861 
 1669      7200
 1670              	.LASF19:
 1671 0072 744F5350 		.ascii	"tOSPCB\000"
 1671      434200
 1672              	.LASF25:
 1673 0079 74507269 		.ascii	"tPrioQueue\000"
 1673      6F517565 
 1673      756500
 1674              	.LASF45:
 1675 0084 68617665 		.ascii	"haveMsg\000"
 1675      4D736700 
 1676              	.LASF24:
 1677 008c 6C6F6E67 		.ascii	"long unsigned int\000"
 1677      20756E73 
 1677      69676E65 
 1677      6420696E 
 1677      7400
 1678              	.LASF2:
 1679 009e 73686F72 		.ascii	"short unsigned int\000"
 1679      7420756E 
 1679      7369676E 
 1679      65642069 
 1679      6E7400
 1680              	.LASF31:
 1681 00b1 7051456E 		.ascii	"pQEnd\000"
 1681      6400
 1682              	.LASF40:
 1683 00b7 6F734372 		.ascii	"osCreateQueue\000"
 1683      65617465 
 1683      51756575 
 1683      6500
 1684              	.LASF10:
 1685 00c5 70507265 		.ascii	"pPrevPrioQueueReady\000"
 1685      76507269 
 1685      6F517565 
 1685      75655265 
 1685      61647900 
 1686              	.LASF47:
 1687 00d9 704D7367 		.ascii	"pMsg\000"
 1687      00
 1688              	.LASF22:
 1689 00de 70507269 		.ascii	"pPrioList\000"
 1689      6F4C6973 
 1689      7400
 1690              	.LASF33:
 1691 00e8 70514F75 		.ascii	"pQOut\000"
 1691      7400
 1692              	.LASF20:
 1693 00ee 5F744F53 		.ascii	"_tOSPCB__\000"
 1693      5043425F 
 1693      5F00
 1694              	.LASF12:
 1695 00f8 70507265 		.ascii	"pPrevPrioQueueEvent\000"
 1695      76507269 
 1695      6F517565 
 1695      75654576 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 39


 1695      656E7400 
 1696              	.LASF9:
 1697 010c 704E6578 		.ascii	"pNextPrioQueueReady\000"
 1697      74507269 
 1697      6F517565 
 1697      75655265 
 1697      61647900 
 1698              	.LASF8:
 1699 0120 7053746B 		.ascii	"pStk\000"
 1699      00
 1700              	.LASF15:
 1701 0125 666C6167 		.ascii	"flag\000"
 1701      00
 1702              	.LASF43:
 1703 012a 70457272 		.ascii	"pError\000"
 1703      6F7200
 1704              	.LASF11:
 1705 0131 704E6578 		.ascii	"pNextPrioQueueEvent\000"
 1705      74507269 
 1705      6F517565 
 1705      75654576 
 1705      656E7400 
 1706              	.LASF4:
 1707 0145 756E7369 		.ascii	"unsigned int\000"
 1707      676E6564 
 1707      20696E74 
 1707      00
 1708              	.LASF18:
 1709 0152 73746163 		.ascii	"stackSize\000"
 1709      6B53697A 
 1709      6500
 1710              	.LASF27:
 1711 015c 77616974 		.ascii	"waitQ\000"
 1711      5100
 1712              	.LASF49:
 1713 0162 6F73506F 		.ascii	"osPostQueue\000"
 1713      73745175 
 1713      65756500 
 1714              	.LASF53:
 1715 016e 636F7265 		.ascii	"core/queue.c\000"
 1715      2F717565 
 1715      75652E63 
 1715      00
 1716              	.LASF17:
 1717 017b 7053746B 		.ascii	"pStkOrg\000"
 1717      4F726700 
 1718              	.LASF37:
 1719 0183 70517565 		.ascii	"pQueue\000"
 1719      756500
 1720              	.LASF51:
 1721 018a 6973724E 		.ascii	"isrNesting\000"
 1721      65737469 
 1721      6E6700
 1722              	.LASF32:
 1723 0195 7051496E 		.ascii	"pQIn\000"
 1723      00
 1724              	.LASF21:
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 40


 1725 019a 5F745072 		.ascii	"_tPrioQueue_\000"
 1725      696F5175 
 1725      6575655F 
 1725      00
 1726              	.LASF0:
 1727 01a7 74553136 		.ascii	"tU16\000"
 1727      00
 1728              	.LASF54:
 1729 01ac 2F637967 		.ascii	"/cygdrive/c/Documents and Settings/Anders Rosvall/M"
 1729      64726976 
 1729      652F632F 
 1729      446F6375 
 1729      6D656E74 
 1730 01df 696E6120 		.ascii	"ina dokument/Embedded Artists/Products/LPC2148 Educ"
 1730      646F6B75 
 1730      6D656E74 
 1730      2F456D62 
 1730      65646465 
 1731 0212 6174696F 		.ascii	"ation Board/Test program/v1.2/pre_emptive_os\000"
 1731      6E20426F 
 1731      6172642F 
 1731      54657374 
 1731      2070726F 
 1732              	.LASF3:
 1733 023f 74553332 		.ascii	"tU32\000"
 1733      00
 1734              	.LASF42:
 1735 0244 74696D65 		.ascii	"timeout\000"
 1735      6F757400 
 1736              	.LASF28:
 1737 024c 744F5345 		.ascii	"tOSEvent\000"
 1737      76656E74 
 1737      00
 1738              	.LASF26:
 1739 0255 5F744F53 		.ascii	"_tOSEvent_\000"
 1739      4576656E 
 1739      745F00
 1740              	.LASF6:
 1741 0260 73686F72 		.ascii	"short int\000"
 1741      7420696E 
 1741      7400
 1742              	.LASF35:
 1743 026a 6E456E74 		.ascii	"nEntries\000"
 1743      72696573 
 1743      00
 1744              	.LASF38:
 1745 0273 70517565 		.ascii	"pQueueArea\000"
 1745      75654172 
 1745      656100
 1746              	.LASF46:
 1747 027e 6F734163 		.ascii	"osAcceptQueue\000"
 1747      63657074 
 1747      51756575 
 1747      6500
 1748              	.LASF13:
 1749 028c 704E6578 		.ascii	"pNextTimeQueue\000"
 1749      7454696D 
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 41


 1749      65517565 
 1749      756500
 1750              	.LASF5:
 1751 029b 7369676E 		.ascii	"signed char\000"
 1751      65642063 
 1751      68617200 
 1752              	.LASF16:
 1753 02a7 736C6565 		.ascii	"sleep\000"
 1753      7000
 1754              	.LASF39:
 1755 02ad 73697A65 		.ascii	"size\000"
 1755      00
 1756              	.LASF7:
 1757 02b2 74426F6F 		.ascii	"tBool\000"
 1757      6C00
 1758              	.LASF36:
 1759 02b8 74517565 		.ascii	"tQueue\000"
 1759      756500
 1760              		.ident	"GCC: (GNU) 3.4.3"
ARM GAS  /cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:1      .text:00000000 $t
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:16     .text:00000000 osCreateQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:57     .text:00000028 osPendQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:197    .text:000000e0 $d
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:205    .text:000000e4 osAcceptQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:202    .text:000000e4 $t
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:277    .text:00000130 osFlushQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:330    .text:00000164 osPostQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:434    .text:000001ec $d
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:442    .text:000001f0 osPostFrontQueue
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:439    .text:000001f0 $t
/cygdrive/c/DOCUME~1/ANDERS~1/LOKALA~1/Temp/ccKCCBJa.s:548    .text:0000027c $d

UNDEFINED SYMBOLS
eventInit
halDisableInterrupts_oshal
halRestoreInterrupts_oshal
eventWait
schedule
eventWaitReturn
isrNesting
eventIsEmpty
eventSignal
